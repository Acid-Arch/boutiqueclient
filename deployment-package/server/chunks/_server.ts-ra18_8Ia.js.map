{"version":3,"file":"_server.ts-ra18_8Ia.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/scraping/enhanced-error-recovery/metrics/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nconst GET = async ({ url }) => {\n  try {\n    const timeframe = url.searchParams.get(\"timeframe\") || \"24h\";\n    const includeBreakdown = url.searchParams.get(\"breakdown\") === \"true\";\n    const validTimeframes = [\"24h\", \"7d\", \"30d\"];\n    if (!validTimeframes.includes(timeframe)) {\n      return json(\n        {\n          error: \"Invalid timeframe\",\n          message: \"Timeframe must be one of: 24h, 7d, 30d\"\n        },\n        { status: 400 }\n      );\n    }\n    const recoveryMetrics = await getRecoveryMetrics(timeframe);\n    const performanceMetrics = await getPerformanceMetrics(timeframe);\n    const patternStats = await getPatternBasedRecoveryStats(timeframe);\n    let errorTypeBreakdown = null;\n    if (includeBreakdown) {\n      errorTypeBreakdown = await getErrorTypeBreakdown(timeframe);\n    }\n    return json({\n      success: true,\n      timeframe,\n      ...recoveryMetrics,\n      performance: performanceMetrics,\n      patternBased: patternStats,\n      breakdown: errorTypeBreakdown,\n      metadata: {\n        generatedAt: (/* @__PURE__ */ new Date()).toISOString(),\n        requestId: crypto.randomUUID(),\n        version: \"1.0\"\n      }\n    });\n  } catch (error) {\n    console.error(\"Enhanced error recovery metrics API error:\", error);\n    return json(\n      {\n        success: false,\n        error: \"Internal server error\",\n        message: error instanceof Error ? error.message : \"Unknown error occurred\",\n        timeframe: url.searchParams.get(\"timeframe\") || \"24h\"\n      },\n      { status: 500 }\n    );\n  }\n};\nasync function getRecoveryMetrics(timeframe) {\n  const baseMetrics = {\n    \"24h\": {\n      totalRecoveries: 45,\n      successfulRecoveries: 42,\n      failedRecoveries: 3,\n      avgRecoveryTime: 12.5,\n      // seconds\n      totalErrors: 48,\n      preventedErrors: 15\n    },\n    \"7d\": {\n      totalRecoveries: 312,\n      successfulRecoveries: 294,\n      failedRecoveries: 18,\n      avgRecoveryTime: 15.2,\n      totalErrors: 335,\n      preventedErrors: 87\n    },\n    \"30d\": {\n      totalRecoveries: 1456,\n      successfulRecoveries: 1367,\n      failedRecoveries: 89,\n      avgRecoveryTime: 14.8,\n      totalErrors: 1502,\n      preventedErrors: 342\n    }\n  };\n  const metrics = baseMetrics[timeframe];\n  const successRate = metrics.successfulRecoveries / metrics.totalRecoveries * 100;\n  const preventionRate = metrics.preventedErrors / (metrics.totalErrors + metrics.preventedErrors) * 100;\n  return {\n    totalRecoveries: metrics.totalRecoveries,\n    successRate: Math.round(successRate * 10) / 10,\n    avgRecoveryTime: metrics.avgRecoveryTime,\n    patternBasedRecoveries: Math.floor(metrics.totalRecoveries * 0.35),\n    // 35% pattern-based\n    preventedErrors: metrics.preventedErrors,\n    preventionRate: Math.round(preventionRate * 10) / 10,\n    failureRate: Math.round(metrics.failedRecoveries / metrics.totalRecoveries * 100 * 10) / 10\n  };\n}\nasync function getPerformanceMetrics(timeframe) {\n  return {\n    patternRecognitionTime: 0.85,\n    // seconds\n    healthAnalysisTime: 0.23,\n    riskAssessmentTime: 0.41,\n    mlModelConfidence: 0.87,\n    systemResponseTime: 0.12,\n    memoryUsage: 145.6,\n    // MB\n    cpuUtilization: 12.4,\n    // %\n    cacheHitRate: 94.2,\n    // %\n    apiLatency: {\n      p50: 45,\n      // ms\n      p95: 120,\n      p99: 280\n    }\n  };\n}\nasync function getPatternBasedRecoveryStats(timeframe) {\n  const baseStats = {\n    \"24h\": {\n      patternsIdentified: 3,\n      patternBasedRecoveries: 16,\n      patternAccuracy: 0.91,\n      falsePositives: 2,\n      falseNegatives: 1\n    },\n    \"7d\": {\n      patternsIdentified: 12,\n      patternBasedRecoveries: 109,\n      patternAccuracy: 0.88,\n      falsePositives: 8,\n      falseNegatives: 6\n    },\n    \"30d\": {\n      patternsIdentified: 28,\n      patternBasedRecoveries: 509,\n      patternAccuracy: 0.89,\n      falsePositives: 31,\n      falseNegatives: 22\n    }\n  };\n  const stats = baseStats[timeframe];\n  return {\n    patternsIdentified: stats.patternsIdentified,\n    patternBasedRecoveries: stats.patternBasedRecoveries,\n    patternAccuracy: Math.round(stats.patternAccuracy * 100),\n    improvementOverBaseline: 34.2,\n    // % improvement over basic recovery\n    adaptiveStrategies: Math.floor(stats.patternBasedRecoveries * 0.42),\n    proactivePreventions: Math.floor(stats.patternBasedRecoveries * 0.28),\n    confidenceScore: 0.85\n  };\n}\nasync function getErrorTypeBreakdown(timeframe) {\n  const errorTypes = [\n    \"RATE_LIMIT\",\n    \"API_ERROR\",\n    \"NETWORK_ERROR\",\n    \"AUTHENTICATION_ERROR\",\n    \"TIMEOUT_ERROR\",\n    \"QUOTA_EXCEEDED\",\n    \"UNKNOWN_ERROR\"\n  ];\n  const breakdown = errorTypes.map((errorType) => {\n    const occurrences = Math.floor(Math.random() * 50) + 10;\n    const recoveries = Math.floor(occurrences * (0.8 + Math.random() * 0.15));\n    const patternBased = Math.floor(recoveries * (0.2 + Math.random() * 0.4));\n    return {\n      errorType,\n      occurrences,\n      recoveries,\n      successRate: Math.round(recoveries / occurrences * 100),\n      patternBasedRecoveries: patternBased,\n      avgRecoveryTime: 8 + Math.random() * 20,\n      severity: getErrorSeverity(errorType),\n      trends: {\n        weeklyChange: (Math.random() - 0.5) * 40,\n        // -20% to +20%\n        monthlyChange: (Math.random() - 0.5) * 60\n        // -30% to +30%\n      }\n    };\n  });\n  breakdown.sort((a, b) => b.occurrences - a.occurrences);\n  return {\n    byErrorType: breakdown,\n    summary: {\n      totalErrorTypes: errorTypes.length,\n      mostCommonError: breakdown[0].errorType,\n      highestSuccessRate: Math.max(...breakdown.map((b) => b.successRate)),\n      averageRecoveryTime: Math.round(\n        breakdown.reduce((sum, b) => sum + b.avgRecoveryTime, 0) / breakdown.length * 10\n      ) / 10\n    }\n  };\n}\nfunction getErrorSeverity(errorType) {\n  const severityMap = {\n    \"RATE_LIMIT\": \"MEDIUM\",\n    \"API_ERROR\": \"HIGH\",\n    \"NETWORK_ERROR\": \"MEDIUM\",\n    \"AUTHENTICATION_ERROR\": \"HIGH\",\n    \"TIMEOUT_ERROR\": \"MEDIUM\",\n    \"QUOTA_EXCEEDED\": \"CRITICAL\",\n    \"UNKNOWN_ERROR\": \"MEDIUM\"\n  };\n  return severityMap[errorType] || \"MEDIUM\";\n}\nconst POST = async ({ request }) => {\n  try {\n    const body = await request.json();\n    const { action, data } = body;\n    if (action === \"reset-metrics\") {\n      return json({\n        success: true,\n        message: \"Metrics reset successfully\",\n        resetAt: (/* @__PURE__ */ new Date()).toISOString()\n      });\n    }\n    if (action === \"export-metrics\") {\n      const { format, timeframe } = data || {};\n      const metricsData = await getRecoveryMetrics(timeframe || \"30d\");\n      const performanceData = await getPerformanceMetrics(timeframe || \"30d\");\n      const patternData = await getPatternBasedRecoveryStats(timeframe || \"30d\");\n      const exportData = {\n        recovery: metricsData,\n        performance: performanceData,\n        patterns: patternData,\n        exportedAt: (/* @__PURE__ */ new Date()).toISOString(),\n        timeframe: timeframe || \"30d\"\n      };\n      return json({\n        success: true,\n        message: \"Metrics exported successfully\",\n        data: exportData,\n        format: format || \"json\"\n      });\n    }\n    return json(\n      {\n        success: false,\n        error: \"Invalid action\",\n        message: \"Supported actions: reset-metrics, export-metrics\"\n      },\n      { status: 400 }\n    );\n  } catch (error) {\n    console.error(\"Enhanced error recovery metrics POST error:\", error);\n    return json(\n      {\n        success: false,\n        error: \"Internal server error\",\n        message: error instanceof Error ? error.message : \"Unknown error occurred\"\n      },\n      { status: 500 }\n    );\n  }\n};\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}