{"version":3,"file":"_server.ts-XS9SDx6A.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/scraping/growth/_accountId_/_server.ts.js"],"sourcesContent":["import { error, json } from \"@sveltejs/kit\";\nimport { query } from \"../../../../../../chunks/db-loader.js\";\nconst GET = async ({ params, url, locals }) => {\n  try {\n    const accountId = parseInt(params.accountId);\n    const period = url.searchParams.get(\"period\") || \"month\";\n    const metric = url.searchParams.get(\"metric\") || \"followers\";\n    if (isNaN(accountId)) {\n      throw error(400, \"Invalid account ID\");\n    }\n    const growthData = await getAccountGrowthData(accountId, period, metric);\n    return json({\n      data: growthData,\n      period,\n      metric,\n      accountId\n    });\n  } catch (err) {\n    console.error(\"Growth API error:\", err);\n    return json(\n      { error: \"Failed to load growth data\" },\n      { status: 500 }\n    );\n  }\n};\nasync function getAccountGrowthData(accountId, period, metric) {\n  try {\n    const now = /* @__PURE__ */ new Date();\n    let startDate;\n    switch (period) {\n      case \"week\":\n        startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1e3);\n        break;\n      case \"month\":\n        startDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1e3);\n        break;\n      case \"quarter\":\n        startDate = new Date(now.getTime() - 90 * 24 * 60 * 60 * 1e3);\n        break;\n      case \"year\":\n        startDate = new Date(now.getTime() - 365 * 24 * 60 * 60 * 1e3);\n        break;\n      default:\n        startDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1e3);\n    }\n    const metricColumn = getMetricColumn(metric);\n    const sqlQuery = `\n\t\t\tSELECT \n\t\t\t\tDATE(scraped_at) as date,\n\t\t\t\tfollowers_count as followers,\n\t\t\t\tfollowing_count as following,\n\t\t\t\tposts_count as posts,\n\t\t\t\tengagement_rate as engagement,\n\t\t\t\tscraped_at\n\t\t\tFROM account_metrics\n\t\t\tWHERE account_id = $1 \n\t\t\t\tAND scraped_at >= $2\n\t\t\t\tAND scraped_at <= $3\n\t\t\tORDER BY scraped_at ASC\n\t\t`;\n    const result = await query(sqlQuery, [accountId, startDate, now]);\n    if (!result?.rows || result.rows.length === 0) {\n      return generateSampleGrowthData(startDate, now, metric);\n    }\n    const processedData = processGrowthData(result.rows, startDate, now, period);\n    return processedData;\n  } catch (error2) {\n    console.error(\"Error fetching growth data:\", error2);\n    return [];\n  }\n}\nfunction getMetricColumn(metric) {\n  switch (metric) {\n    case \"followers\":\n      return \"followers_count\";\n    case \"following\":\n      return \"following_count\";\n    case \"posts\":\n      return \"posts_count\";\n    case \"engagement\":\n      return \"engagement_rate\";\n    default:\n      return \"followers_count\";\n  }\n}\nfunction processGrowthData(rows, startDate, endDate, period) {\n  if (rows.length === 0) return [];\n  const dailyData = /* @__PURE__ */ new Map();\n  rows.forEach((row) => {\n    const dateKey = row.date;\n    if (!dailyData.has(dateKey) || new Date(row.scraped_at) > new Date(dailyData.get(dateKey).scraped_at)) {\n      dailyData.set(dateKey, {\n        date: new Date(row.date),\n        followers: parseInt(row.followers) || 0,\n        following: parseInt(row.following) || 0,\n        posts: parseInt(row.posts) || 0,\n        engagement: parseFloat(row.engagement) || 0\n      });\n    }\n  });\n  return Array.from(dailyData.values()).sort((a, b) => a.date.getTime() - b.date.getTime());\n}\nfunction generateSampleGrowthData(startDate, endDate, metric) {\n  const data = [];\n  const daysDiff = Math.ceil((endDate.getTime() - startDate.getTime()) / (1e3 * 60 * 60 * 24));\n  const dataPoints = Math.min(daysDiff, 30);\n  let baseFollowers = 1250 + Math.floor(Math.random() * 5e3);\n  let baseFollowing = 850 + Math.floor(Math.random() * 1e3);\n  let basePosts = 120 + Math.floor(Math.random() * 200);\n  let baseEngagement = 2.5 + Math.random() * 3;\n  for (let i = 0; i < dataPoints; i++) {\n    const date = new Date(startDate.getTime() + i * (daysDiff / dataPoints) * 24 * 60 * 60 * 1e3);\n    const growthFactor = 1 + (Math.random() - 0.4) * 0.05;\n    baseFollowers = Math.floor(baseFollowers * growthFactor);\n    baseFollowing = Math.floor(baseFollowing * (1 + (Math.random() - 0.5) * 0.02));\n    basePosts += Math.random() < 0.3 ? Math.floor(Math.random() * 3) : 0;\n    baseEngagement = Math.max(0.5, baseEngagement * (1 + (Math.random() - 0.5) * 0.1));\n    data.push({\n      date,\n      followers: baseFollowers,\n      following: baseFollowing,\n      posts: basePosts,\n      engagement: parseFloat(baseEngagement.toFixed(2))\n    });\n  }\n  return data;\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}