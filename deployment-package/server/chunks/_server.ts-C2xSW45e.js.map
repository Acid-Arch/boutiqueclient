{"version":3,"file":"_server.ts-C2xSW45e.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/accounts/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { getAccounts, getAccountsCount, checkUsernameExists, createAccount } from \"../../../../chunks/db-loader.js\";\nimport { v as validateAPIRequest } from \"../../../../chunks/middleware.js\";\nimport { P as PaginationSchema, A as AccountFilterSchema } from \"../../../../chunks/schemas.js\";\nimport { A as ACCOUNT_STATUSES } from \"../../../../chunks/status.js\";\nconst GET = async (event) => {\n  const validation = await validateAPIRequest(event, {\n    paramsSchema: PaginationSchema.merge(AccountFilterSchema),\n    requireAuth: true,\n    rateLimit: {\n      requests: 100,\n      // 100 requests\n      windowMs: 60 * 1e3\n      // per minute\n    }\n  });\n  if (!validation.success) {\n    return validation.response;\n  }\n  const { limit, offset, status: statusFilter, search: searchQuery, ownerId, accountTypes, includeMLAccounts } = validation.params;\n  try {\n    const advancedFilters = {\n      ownerId,\n      accountTypes,\n      includeMLAccounts\n    };\n    const { url } = event;\n    const includeShared = url.searchParams.get(\"includeShared\");\n    if (includeShared !== null) {\n      advancedFilters.includeShared = includeShared === \"true\";\n    }\n    const visibilityFilter = url.searchParams.get(\"visibilityFilter\");\n    if (visibilityFilter) {\n      advancedFilters.visibilityFilter = visibilityFilter.split(\",\");\n    }\n    if (searchQuery) {\n      advancedFilters.search = searchQuery;\n    }\n    if (statusFilter) {\n      advancedFilters.statuses = [statusFilter];\n    }\n    const [accounts, totalCount] = await Promise.all([\n      getAccounts(limit, offset, void 0, void 0, advancedFilters),\n      getAccountsCount(void 0, void 0, advancedFilters)\n    ]);\n    return json({\n      success: true,\n      data: accounts,\n      pagination: {\n        limit,\n        offset,\n        hasMore: accounts.length === limit,\n        total: totalCount\n      },\n      // Include applied filters in response for debugging\n      appliedFilters: advancedFilters\n    });\n  } catch (error) {\n    console.error(\"Failed to get accounts:\", error);\n    return json({\n      success: false,\n      error: \"Failed to retrieve accounts\"\n    }, { status: 500 });\n  }\n};\nconst POST = async ({ request }) => {\n  try {\n    const data = await request.json();\n    const {\n      recordId,\n      instagramUsername,\n      instagramPassword,\n      emailAddress,\n      emailPassword,\n      status = \"Unused\",\n      imapStatus = \"On\",\n      assignedDeviceId,\n      assignedCloneNumber,\n      assignedPackageName,\n      // Account ownership fields\n      ownerId,\n      accountType = \"CLIENT\",\n      visibility = \"PRIVATE\",\n      isShared = false\n    } = data;\n    const errors = {};\n    if (!instagramUsername) {\n      errors.instagramUsername = \"Instagram username is required\";\n    } else if (instagramUsername.length < 3) {\n      errors.instagramUsername = \"Instagram username must be at least 3 characters\";\n    }\n    if (!instagramPassword) {\n      errors.instagramPassword = \"Instagram password is required\";\n    } else if (instagramPassword.length < 6) {\n      errors.instagramPassword = \"Instagram password must be at least 6 characters\";\n    }\n    if (!emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(emailAddress)) {\n      errors.emailAddress = \"Please enter a valid email address\";\n    }\n    if (!emailPassword) {\n      errors.emailPassword = \"Email password is required\";\n    } else if (emailPassword.length < 6) {\n      errors.emailPassword = \"Email password must be at least 6 characters\";\n    }\n    if (!ACCOUNT_STATUSES.includes(status)) {\n      errors.status = \"Please select a valid status\";\n    }\n    if (imapStatus && ![\"On\", \"Off\"].includes(imapStatus)) {\n      errors.imapStatus = \"IMAP status must be On or Off\";\n    }\n    if (instagramUsername) {\n      const usernameExists = await checkUsernameExists(instagramUsername);\n      if (usernameExists) {\n        errors.instagramUsername = \"This Instagram username is already registered\";\n      }\n    }\n    if (Object.keys(errors).length > 0) {\n      return json({\n        success: false,\n        errors\n      }, { status: 400 });\n    }\n    const newAccount = await createAccount({\n      recordId,\n      instagramUsername,\n      instagramPassword,\n      emailAddress,\n      emailPassword,\n      status,\n      imapStatus,\n      assignedDeviceId,\n      assignedCloneNumber,\n      assignedPackageName,\n      // Account ownership fields\n      ownerId: ownerId || null,\n      accountType,\n      visibility,\n      isShared\n    });\n    return json({\n      success: true,\n      data: newAccount\n    }, { status: 201 });\n  } catch (error) {\n    console.error(\"Failed to create account:\", error);\n    return json({\n      success: false,\n      error: \"Failed to create account\"\n    }, { status: 500 });\n  }\n};\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}