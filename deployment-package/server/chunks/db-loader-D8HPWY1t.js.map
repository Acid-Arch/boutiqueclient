{"version":3,"file":"db-loader-D8HPWY1t.js","sources":["../../../.svelte-kit/adapter-node/chunks/db-loader.js"],"sourcesContent":["import { A, a, C, D } from \"./status.js\";\nlet dbModule = null;\nlet fallbackModule = null;\nlet usingFallback = false;\nif (process.env.DATABASE_URL?.includes(\"5.78.151.248\")) {\n  console.log(\"üîß Hetzner database detected, forcing fallback mode\");\n  usingFallback = true;\n}\nasync function getDbModule() {\n  if (dbModule && !usingFallback) return dbModule;\n  if (fallbackModule && usingFallback) return fallbackModule;\n  try {\n    dbModule = await import(\"./database.js\");\n    const isPrismaWorking = await dbModule.isPrismaAvailable();\n    if (isPrismaWorking) {\n      console.log(\"‚úÖ Using Prisma database module\");\n      usingFallback = false;\n      return dbModule;\n    } else {\n      throw new Error(\"Prisma not available, switching to fallback\");\n    }\n  } catch (error) {\n    console.log(\"‚ö†Ô∏è  Prisma not available, using fallback database connection\");\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    console.log(\"üìã Fallback reason:\", errorMessage);\n    if (!fallbackModule) {\n      fallbackModule = await import(\"./database-fallback.js\");\n    }\n    usingFallback = true;\n    return fallbackModule;\n  }\n}\nasync function getDb() {\n  return await getDbModule();\n}\nasync function getAccountStats() {\n  const db = await getDbModule();\n  return db.getAccountStats();\n}\nasync function getAccounts(limit, offset, statusFilter, searchQuery, advancedFilters) {\n  const db = await getDbModule();\n  return db.getAccounts(limit, offset, statusFilter, searchQuery, advancedFilters);\n}\nasync function getAccountsCount(statusFilter, searchQuery, advancedFilters) {\n  const db = await getDbModule();\n  return db.getAccountsCount(statusFilter, searchQuery, advancedFilters);\n}\nasync function getAccountById(id) {\n  const db = await getDbModule();\n  return db.getAccountById(id);\n}\nasync function createAccount(data) {\n  const db = await getDbModule();\n  return db.createAccount(data);\n}\nasync function updateAccount(id, data) {\n  const db = await getDbModule();\n  return db.updateAccount(id, data);\n}\nasync function deleteAccount(id) {\n  const db = await getDbModule();\n  return db.deleteAccount(id);\n}\nasync function checkUsernameExists(username, excludeId) {\n  const db = await getDbModule();\n  return db.checkUsernameExists(username, excludeId);\n}\nasync function getAvailableAccounts(limit) {\n  const db = await getDbModule();\n  return db.getAvailableAccounts(limit);\n}\nasync function getDeviceSummaries() {\n  const db = await getDbModule();\n  return db.getDeviceSummaries();\n}\nasync function getDeviceStats() {\n  const db = await getDbModule();\n  return db.getDeviceStats();\n}\nasync function getDeviceDetails(deviceId) {\n  const db = await getDbModule();\n  return db.getDeviceDetails(deviceId);\n}\nasync function updateCloneStatus(deviceId, cloneNumber, status) {\n  const db = await getDbModule();\n  return db.updateCloneStatus(deviceId, cloneNumber, status);\n}\nasync function assignAccountToClone(accountId, deviceId, cloneNumber) {\n  const db = await getDbModule();\n  return db.assignAccountToClone(accountId, deviceId, cloneNumber);\n}\nasync function getPrisma() {\n  const db = await getDbModule();\n  if (usingFallback && fallbackModule) {\n    return fallbackModule.prisma;\n  }\n  if (dbModule && !usingFallback) {\n    try {\n      const isPrismaWorking = await dbModule.isPrismaAvailable();\n      if (isPrismaWorking) {\n        return dbModule.prisma;\n      } else {\n        console.log(\"‚ö†Ô∏è  Prisma failed during getPrisma(), switching to fallback\");\n        if (!fallbackModule) {\n          fallbackModule = await import(\"./database-fallback.js\");\n        }\n        usingFallback = true;\n        return fallbackModule.prisma;\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      console.log(\"‚ö†Ô∏è  Prisma error in getPrisma(), using fallback:\", errorMessage);\n      if (!fallbackModule) {\n        fallbackModule = await import(\"./database-fallback.js\");\n      }\n      usingFallback = true;\n      return fallbackModule.prisma;\n    }\n  }\n  return db.prisma;\n}\nlet _prisma = null;\nlet _prismaPromise = null;\nasync function initializePrisma() {\n  if (_prismaPromise) return _prismaPromise;\n  _prismaPromise = (async () => {\n    try {\n      const db = await getDbModule();\n      if (usingFallback && fallbackModule) {\n        _prisma = fallbackModule.prisma;\n        console.log(\"‚úÖ Using fallback prisma interface\");\n        return _prisma;\n      }\n      if (!usingFallback && dbModule) {\n        const isPrismaWorking = await dbModule.isPrismaAvailable();\n        if (isPrismaWorking) {\n          _prisma = dbModule.prisma;\n          console.log(\"‚úÖ Prisma initialized successfully\");\n          return _prisma;\n        }\n      }\n      if (!fallbackModule) {\n        fallbackModule = await import(\"./database-fallback.js\");\n      }\n      usingFallback = true;\n      _prisma = fallbackModule.prisma;\n      console.log(\"‚úÖ Using fallback prisma interface\");\n      return _prisma;\n    } catch (err) {\n      console.log(\"‚ö†Ô∏è  Prisma initialization failed, using fallback:\", err);\n      if (!fallbackModule) {\n        fallbackModule = await import(\"./database-fallback.js\");\n      }\n      usingFallback = true;\n      _prisma = fallbackModule.prisma;\n      console.log(\"‚úÖ Using fallback prisma interface\");\n      return _prisma;\n    }\n  })();\n  return _prismaPromise;\n}\nconst prisma = new Proxy({}, {\n  get: function(target, prop) {\n    if (_prisma === null) {\n      throw new Error(`Prisma not yet initialized. Please await getPrisma() first or use the database functions from db-loader instead.`);\n    }\n    if (_prisma && _prisma[prop]) {\n      return _prisma[prop];\n    }\n    throw new Error(`Property ${String(prop)} not found on prisma instance`);\n  }\n});\ninitializePrisma();\nasync function query(sql, params = []) {\n  const db = await getDbModule();\n  return db.query(sql, params);\n}\nexport {\n  A as ACCOUNT_STATUSES,\n  a as CLONE_HEALTH,\n  C as CLONE_STATUSES,\n  D as DEVICE_STATUSES,\n  assignAccountToClone,\n  checkUsernameExists,\n  createAccount,\n  deleteAccount,\n  getAccountById,\n  getAccountStats,\n  getAccounts,\n  getAccountsCount,\n  getAvailableAccounts,\n  getDb,\n  getDeviceDetails,\n  getDeviceStats,\n  getDeviceSummaries,\n  getPrisma,\n  prisma,\n  query,\n  updateAccount,\n  updateCloneStatus\n};\n"],"names":[],"mappings":"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"}