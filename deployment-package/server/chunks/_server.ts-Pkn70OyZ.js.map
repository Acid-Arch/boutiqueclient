{"version":3,"file":"_server.ts-Pkn70OyZ.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/scraping/enhanced-error-recovery/realtime/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { e as enhancedErrorRecovery } from \"../../../../../../chunks/enhanced-error-recovery.js\";\nconst GET = async ({ url }) => {\n  try {\n    const includeErrors = url.searchParams.get(\"errors\") !== \"false\";\n    const includePatterns = url.searchParams.get(\"patterns\") !== \"false\";\n    const includeHealth = url.searchParams.get(\"health\") !== \"false\";\n    const limit = parseInt(url.searchParams.get(\"limit\") || \"50\");\n    if (limit < 1 || limit > 1e3) {\n      return json(\n        {\n          error: \"Invalid limit\",\n          message: \"Limit must be between 1 and 1000\"\n        },\n        { status: 400 }\n      );\n    }\n    const realtimeData = {\n      success: true,\n      timestamp: (/* @__PURE__ */ new Date()).toISOString(),\n      requestId: crypto.randomUUID()\n    };\n    if (includeErrors) {\n      realtimeData.recentErrors = await getRecentErrors(limit);\n      realtimeData.errorSummary = await getErrorSummary();\n    }\n    if (includePatterns) {\n      realtimeData.patternUpdates = await getPatternUpdates(limit);\n      realtimeData.systemAnalytics = enhancedErrorRecovery.getSystemAnalytics();\n    }\n    if (includeHealth) {\n      realtimeData.healthUpdates = await getHealthUpdates(limit);\n      realtimeData.criticalAccounts = await getCriticalAccounts();\n    }\n    realtimeData.systemStatus = await getSystemStatus();\n    return json(realtimeData);\n  } catch (error) {\n    console.error(\"Enhanced error recovery realtime API error:\", error);\n    return json(\n      {\n        success: false,\n        error: \"Internal server error\",\n        message: error instanceof Error ? error.message : \"Unknown error occurred\"\n      },\n      { status: 500 }\n    );\n  }\n};\nconst POST = async ({ request }) => {\n  try {\n    const body = await request.json();\n    const { action, data } = body;\n    if (action === \"push-error-update\") {\n      const { error, context } = data;\n      if (!error || !context) {\n        return json(\n          {\n            success: false,\n            error: \"Missing required data\",\n            message: \"error and context are required\"\n          },\n          { status: 400 }\n        );\n      }\n      const result = await enhancedErrorRecovery.handleError(\n        error,\n        context,\n        // Mock session manager for demonstration\n        {\n          pauseSession: async (sessionId) => {\n            console.log(`Session ${sessionId} paused`);\n          },\n          cancelSession: async (sessionId, reason) => {\n            console.log(`Session ${sessionId} cancelled: ${reason}`);\n          },\n          updateSessionProgress: async (sessionId, progress) => {\n            console.log(`Session ${sessionId} progress updated:`, progress);\n          }\n        }\n      );\n      const broadcastData = {\n        type: \"ERROR_RECOVERY_UPDATE\",\n        error: result.scrapingError,\n        recovery: result.recovery,\n        patterns: result.patterns,\n        healthUpdate: result.healthUpdate,\n        timestamp: (/* @__PURE__ */ new Date()).toISOString()\n      };\n      return json({\n        success: true,\n        message: \"Error update pushed successfully\",\n        result,\n        broadcast: broadcastData\n      });\n    }\n    if (action === \"push-health-update\") {\n      const { accountId, healthData } = data;\n      if (!accountId || !healthData) {\n        return json(\n          {\n            success: false,\n            error: \"Missing required data\",\n            message: \"accountId and healthData are required\"\n          },\n          { status: 400 }\n        );\n      }\n      const healthUpdate = {\n        accountId,\n        healthScore: healthData.healthScore || 50,\n        riskFactors: healthData.riskFactors || {},\n        predictions: healthData.predictions || {},\n        lastAnalyzed: /* @__PURE__ */ new Date(),\n        updatedBy: \"enhanced-recovery-system\"\n      };\n      const broadcastData = {\n        type: \"HEALTH_UPDATE\",\n        accountId,\n        healthUpdate,\n        timestamp: (/* @__PURE__ */ new Date()).toISOString()\n      };\n      return json({\n        success: true,\n        message: \"Health update pushed successfully\",\n        healthUpdate,\n        broadcast: broadcastData\n      });\n    }\n    if (action === \"push-pattern-update\") {\n      const { pattern } = data;\n      if (!pattern) {\n        return json(\n          {\n            success: false,\n            error: \"Missing pattern data\",\n            message: \"pattern is required\"\n          },\n          { status: 400 }\n        );\n      }\n      const patternUpdate = {\n        patternId: pattern.patternId || crypto.randomUUID(),\n        errorTypes: pattern.errorTypes || [\"UNKNOWN\"],\n        frequency: pattern.frequency || 1,\n        confidence: pattern.confidence || 0.5,\n        predictedImpact: pattern.predictedImpact || \"MEDIUM\",\n        detectedAt: (/* @__PURE__ */ new Date()).toISOString()\n      };\n      const broadcastData = {\n        type: \"PATTERN_UPDATE\",\n        pattern: patternUpdate,\n        timestamp: (/* @__PURE__ */ new Date()).toISOString()\n      };\n      return json({\n        success: true,\n        message: \"Pattern update pushed successfully\",\n        pattern: patternUpdate,\n        broadcast: broadcastData\n      });\n    }\n    return json(\n      {\n        success: false,\n        error: \"Invalid action\",\n        message: \"Supported actions: push-error-update, push-health-update, push-pattern-update\"\n      },\n      { status: 400 }\n    );\n  } catch (error) {\n    console.error(\"Enhanced error recovery realtime POST error:\", error);\n    return json(\n      {\n        success: false,\n        error: \"Internal server error\",\n        message: error instanceof Error ? error.message : \"Unknown error occurred\"\n      },\n      { status: 500 }\n    );\n  }\n};\nasync function getRecentErrors(limit) {\n  const now = Date.now();\n  const recentErrors = [];\n  const errorTypes = [\"RATE_LIMIT\", \"API_ERROR\", \"NETWORK_ERROR\", \"TIMEOUT_ERROR\"];\n  const severities = [\"LOW\", \"MEDIUM\", \"HIGH\"];\n  for (let i = 0; i < Math.min(limit, 20); i++) {\n    const timestamp = new Date(now - Math.random() * 10 * 60 * 1e3);\n    recentErrors.push({\n      id: crypto.randomUUID(),\n      type: errorTypes[Math.floor(Math.random() * errorTypes.length)],\n      severity: severities[Math.floor(Math.random() * severities.length)],\n      message: \"Recent error detected by monitoring system\",\n      timestamp,\n      sessionId: `session-${Math.floor(Math.random() * 10)}`,\n      accountId: Math.random() > 0.3 ? `acc-${Math.floor(Math.random() * 20)}` : void 0,\n      recovered: Math.random() > 0.2,\n      recoveryTime: Math.random() * 30\n      // seconds\n    });\n  }\n  return recentErrors.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n}\nasync function getErrorSummary() {\n  return {\n    last15Minutes: {\n      totalErrors: Math.floor(Math.random() * 10) + 2,\n      recoveredErrors: Math.floor(Math.random() * 8) + 1,\n      activeErrors: Math.floor(Math.random() * 3)\n    },\n    last60Minutes: {\n      totalErrors: Math.floor(Math.random() * 30) + 5,\n      recoveredErrors: Math.floor(Math.random() * 25) + 4,\n      activeErrors: Math.floor(Math.random() * 5) + 1\n    },\n    trendDirection: Math.random() > 0.5 ? \"increasing\" : \"decreasing\",\n    severityDistribution: {\n      \"LOW\": Math.floor(Math.random() * 5) + 1,\n      \"MEDIUM\": Math.floor(Math.random() * 8) + 2,\n      \"HIGH\": Math.floor(Math.random() * 3) + 1,\n      \"CRITICAL\": Math.floor(Math.random() * 2)\n    }\n  };\n}\nasync function getPatternUpdates(limit) {\n  const updates = [];\n  const patternTypes = [\"frequency\", \"account-specific\", \"sequential\", \"time-based\"];\n  for (let i = 0; i < Math.min(limit, 5); i++) {\n    updates.push({\n      id: crypto.randomUUID(),\n      type: patternTypes[Math.floor(Math.random() * patternTypes.length)],\n      errorTypes: [\"RATE_LIMIT\", \"API_ERROR\"].slice(0, Math.floor(Math.random() * 2) + 1),\n      confidence: 0.6 + Math.random() * 0.35,\n      frequency: Math.floor(Math.random() * 10) + 3,\n      impact: [\"LOW\", \"MEDIUM\", \"HIGH\"][Math.floor(Math.random() * 3)],\n      detectedAt: new Date(Date.now() - Math.random() * 60 * 60 * 1e3),\n      // Last hour\n      status: \"active\"\n    });\n  }\n  return updates;\n}\nasync function getHealthUpdates(limit) {\n  const updates = [];\n  for (let i = 0; i < Math.min(limit, 10); i++) {\n    const changeType = [\"improved\", \"degraded\", \"stable\"][Math.floor(Math.random() * 3)];\n    const healthScore = 30 + Math.random() * 60;\n    updates.push({\n      accountId: `acc-${Math.floor(Math.random() * 50).toString().padStart(3, \"0\")}`,\n      changeType,\n      previousScore: healthScore + (changeType === \"improved\" ? -10 : changeType === \"degraded\" ? 10 : 0),\n      currentScore: healthScore,\n      changeReason: changeType === \"improved\" ? \"Successful sessions\" : changeType === \"degraded\" ? \"Multiple errors detected\" : \"Regular monitoring\",\n      updatedAt: new Date(Date.now() - Math.random() * 30 * 60 * 1e3)\n      // Last 30 minutes\n    });\n  }\n  return updates.sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());\n}\nasync function getCriticalAccounts() {\n  const criticalAccounts = [];\n  for (let i = 0; i < 3; i++) {\n    criticalAccounts.push({\n      accountId: `acc-critical-${i + 1}`,\n      healthScore: Math.random() * 30,\n      // Below 30 is critical\n      issues: [\n        \"High error rate\",\n        \"Consecutive authentication failures\",\n        \"Rate limit violations\"\n      ].slice(0, Math.floor(Math.random() * 3) + 1),\n      recommendedAction: \"QUARANTINE\",\n      urgency: \"HIGH\",\n      lastActivity: new Date(Date.now() - Math.random() * 2 * 60 * 60 * 1e3)\n      // Last 2 hours\n    });\n  }\n  return criticalAccounts;\n}\nasync function getSystemStatus() {\n  return {\n    mlEngine: {\n      status: \"operational\",\n      patternRecognition: \"active\",\n      confidenceLevel: 0.87,\n      lastUpdate: (/* @__PURE__ */ new Date()).toISOString()\n    },\n    errorRecovery: {\n      status: \"operational\",\n      activeRecoveries: Math.floor(Math.random() * 5),\n      successRate: 94.2,\n      avgResponseTime: 0.8\n      // seconds\n    },\n    healthMonitoring: {\n      status: \"operational\",\n      monitoredAccounts: 50,\n      criticalAlerts: Math.floor(Math.random() * 3),\n      lastHealthCheck: new Date(Date.now() - 5 * 60 * 1e3).toISOString()\n      // 5 minutes ago\n    },\n    systemLoad: {\n      cpu: Math.random() * 20 + 10,\n      // 10-30%\n      memory: Math.random() * 30 + 40,\n      // 40-70%\n      networkLatency: Math.random() * 20 + 30\n      // 30-50ms\n    }\n  };\n}\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}