{"version":3,"file":"auth-direct-XClulT-4.js","sources":["../../../.svelte-kit/adapter-node/chunks/auth-direct.js"],"sourcesContent":["import bcrypt from \"bcrypt\";\nimport pg from \"pg\";\nimport { d as dev } from \"./index.js\";\nconst DATABASE_URL = \"postgresql://iglogin:boutiquepassword123@5.78.151.248:5432/igloginagent?sslmode=require\";\nconst GOOGLE_CLIENT_ID = \"disabled-for-ip-deployment\";\nconst GOOGLE_CLIENT_SECRET = \"disabled-for-ip-deployment\";\nconst { Client } = pg;\nconst SALT_ROUNDS = 12;\nconst SESSION_DURATION = 7 * 24 * 60 * 60 * 1e3;\nasync function getDbClient() {\n  const client = new Client({\n    connectionString: DATABASE_URL\n  });\n  await client.connect();\n  return client;\n}\nclass AuthService {\n  /**\n   * Hash a password using bcrypt\n   */\n  static async hashPassword(password) {\n    return bcrypt.hash(password, SALT_ROUNDS);\n  }\n  /**\n   * Verify a password against a hash\n   */\n  static async verifyPassword(password, hash) {\n    return bcrypt.compare(password, hash);\n  }\n  /**\n   * Authenticate user with email and password\n   */\n  static async authenticateUser(email, password) {\n    let client = null;\n    try {\n      console.log(\"🔍 Authenticating user:\", email);\n      client = await getDbClient();\n      const userQuery = `\n        SELECT id, email, password_hash as password, name, company, avatar_url as avatar, role, subscription, active, last_login_at\n        FROM users \n        WHERE email = $1 AND active = true\n      `;\n      const result = await client.query(userQuery, [email]);\n      console.log(\"📊 User query result:\", result.rows.length, \"rows found\");\n      if (result.rows.length === 0) {\n        console.log(\"❌ No user found or user is inactive\");\n        return {\n          success: false,\n          error: \"Invalid credentials\"\n        };\n      }\n      const user = result.rows[0];\n      console.log(\"👤 Found user:\", user.email, \"has password hash:\", !!user.password);\n      const isValidPassword = await this.verifyPassword(password, user.password);\n      console.log(\"🔑 Password verification result:\", isValidPassword);\n      if (!isValidPassword) {\n        console.log(\"❌ Password verification failed\");\n        return {\n          success: false,\n          error: \"Invalid credentials\"\n        };\n      }\n      await client.query(\n        \"UPDATE users SET last_login_at = NOW(), updated_at = NOW() WHERE id = $1\",\n        [user.id]\n      );\n      const sessionUser = {\n        id: user.id,\n        email: user.email,\n        name: user.name || \"User\",\n        company: user.company,\n        avatar: user.avatar,\n        role: user.role,\n        subscription: user.subscription,\n        isActive: user.active,\n        lastLoginAt: user.last_login_at\n      };\n      return {\n        success: true,\n        user: sessionUser\n      };\n    } catch (error) {\n      console.error(\"Authentication error:\", error);\n      return {\n        success: false,\n        error: \"Authentication failed\"\n      };\n    } finally {\n      if (client) {\n        await client.end();\n      }\n    }\n  }\n  /**\n   * Find user by ID\n   */\n  static async getUserById(userId) {\n    let client = null;\n    try {\n      client = await getDbClient();\n      const userQuery = `\n        SELECT id, email, name, company, avatar_url as avatar, role, subscription, active, last_login_at\n        FROM users \n        WHERE id = $1 AND active = true\n      `;\n      const result = await client.query(userQuery, [userId]);\n      if (result.rows.length === 0) {\n        return null;\n      }\n      const user = result.rows[0];\n      return {\n        id: user.id,\n        email: user.email,\n        name: user.name || \"User\",\n        company: user.company,\n        avatar: user.avatar,\n        role: user.role,\n        subscription: user.subscription,\n        isActive: user.active,\n        lastLoginAt: user.last_login_at\n      };\n    } catch (error) {\n      console.error(\"Get user error:\", error);\n      return null;\n    } finally {\n      if (client) {\n        await client.end();\n      }\n    }\n  }\n  /**\n   * Find user by email\n   */\n  static async getUserByEmail(email) {\n    let client = null;\n    try {\n      client = await getDbClient();\n      const userQuery = `\n        SELECT id, email, name, company, avatar_url as avatar, role, subscription, active, last_login_at\n        FROM users \n        WHERE email = $1 AND active = true\n      `;\n      const result = await client.query(userQuery, [email]);\n      if (result.rows.length === 0) {\n        return null;\n      }\n      const user = result.rows[0];\n      return {\n        id: user.id.toString(),\n        email: user.email,\n        name: user.name,\n        company: user.company,\n        avatar: user.avatar,\n        role: user.role,\n        subscription: user.subscription || \"Basic\",\n        isActive: user.active,\n        lastLoginAt: user.last_login_at\n      };\n    } catch (error) {\n      console.error(\"Error getting user by email:\", error);\n      return null;\n    } finally {\n      if (client) {\n        await client.end();\n      }\n    }\n  }\n  /**\n   * Get the first admin user from the database (for trusted IP fallback)\n   */\n  static async getFirstAdminUser() {\n    let client = null;\n    try {\n      client = await getDbClient();\n      const userQuery = `\n        SELECT id, email, name, company, avatar_url as avatar, role, subscription, active, last_login_at\n        FROM users \n        WHERE role = 'ADMIN' AND active = true\n        ORDER BY id ASC\n        LIMIT 1\n      `;\n      const result = await client.query(userQuery);\n      if (result.rows.length === 0) {\n        return null;\n      }\n      const user = result.rows[0];\n      return {\n        id: user.id.toString(),\n        email: user.email,\n        name: user.name,\n        company: user.company,\n        avatar: user.avatar,\n        role: user.role,\n        subscription: user.subscription || \"Enterprise\",\n        isActive: user.active,\n        lastLoginAt: user.last_login_at\n      };\n    } catch (error) {\n      console.error(\"Error getting first admin user:\", error);\n      return null;\n    } finally {\n      if (client) {\n        await client.end();\n      }\n    }\n  }\n  /**\n   * Generate a secure session token\n   */\n  static generateSessionToken() {\n    const randomBytes = crypto.getRandomValues(new Uint8Array(32));\n    return Array.from(randomBytes, (byte) => byte.toString(16).padStart(2, \"0\")).join(\"\");\n  }\n  /**\n   * Create secure session cookie options\n   */\n  static getSessionCookieOptions() {\n    return {\n      httpOnly: true,\n      secure: !dev,\n      // Use secure cookies in production\n      sameSite: \"lax\",\n      maxAge: SESSION_DURATION / 1e3,\n      // Convert to seconds\n      path: \"/\"\n    };\n  }\n  /**\n   * Validate session token format\n   */\n  static isValidSessionToken(token) {\n    return typeof token === \"string\" && token.length === 64 && /^[a-f0-9]+$/i.test(token);\n  }\n}\nexport {\n  AuthService as A,\n  DATABASE_URL as D,\n  GOOGLE_CLIENT_ID as G,\n  GOOGLE_CLIENT_SECRET as a\n};\n"],"names":[],"mappings":"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"}