{"version":3,"file":"error-recovery-DvvqzRuU.js","sources":["../../../.svelte-kit/adapter-node/chunks/error-recovery.js"],"sourcesContent":["function classifyError(error, context) {\n  const timestamp = /* @__PURE__ */ new Date();\n  if (error.status === 429 || error.message?.includes(\"rate limit\") || error.code === \"RATE_LIMITED\") {\n    return {\n      type: \"RATE_LIMIT\",\n      severity: \"MEDIUM\",\n      code: error.status || 429,\n      message: \"Rate limit exceeded - requests too frequent\",\n      details: error,\n      timestamp,\n      sessionId: context?.sessionId,\n      accountId: context?.accountId,\n      retryable: true,\n      suggestedDelay: 6e4,\n      // 1 minute\n      maxRetries: 5\n    };\n  }\n  if (error.status === 401 || error.status === 403 || error.message?.includes(\"unauthorized\")) {\n    return {\n      type: \"AUTHENTICATION_ERROR\",\n      severity: \"HIGH\",\n      code: error.status || 401,\n      message: \"Authentication failed - invalid or expired credentials\",\n      details: error,\n      timestamp,\n      sessionId: context?.sessionId,\n      accountId: context?.accountId,\n      retryable: false,\n      maxRetries: 0\n    };\n  }\n  if (error.status === 402 || error.message?.includes(\"quota\") || error.message?.includes(\"budget\")) {\n    return {\n      type: \"QUOTA_EXCEEDED\",\n      severity: \"CRITICAL\",\n      code: error.status || 402,\n      message: \"API quota or budget limit exceeded\",\n      details: error,\n      timestamp,\n      sessionId: context?.sessionId,\n      accountId: context?.accountId,\n      retryable: false,\n      maxRetries: 0\n    };\n  }\n  if (error.code === \"ECONNRESET\" || error.code === \"ETIMEDOUT\" || error.message?.includes(\"timeout\")) {\n    return {\n      type: \"TIMEOUT_ERROR\",\n      severity: \"MEDIUM\",\n      code: error.code || \"TIMEOUT\",\n      message: \"Request timed out - network connectivity issue\",\n      details: error,\n      timestamp,\n      sessionId: context?.sessionId,\n      accountId: context?.accountId,\n      retryable: true,\n      suggestedDelay: 1e4,\n      // 10 seconds\n      maxRetries: 3\n    };\n  }\n  if (error.code === \"ENOTFOUND\" || error.code === \"ECONNREFUSED\" || error.status >= 500) {\n    return {\n      type: \"NETWORK_ERROR\",\n      severity: \"MEDIUM\",\n      code: error.status || error.code,\n      message: \"Network error - server unavailable or connection failed\",\n      details: error,\n      timestamp,\n      sessionId: context?.sessionId,\n      accountId: context?.accountId,\n      retryable: true,\n      suggestedDelay: 3e4,\n      // 30 seconds\n      maxRetries: 5\n    };\n  }\n  if (error.status >= 400 && error.status < 500) {\n    return {\n      type: \"API_ERROR\",\n      severity: \"HIGH\",\n      code: error.status,\n      message: `API error: ${error.message || \"Invalid request\"}`,\n      details: error,\n      timestamp,\n      sessionId: context?.sessionId,\n      accountId: context?.accountId,\n      retryable: error.status === 408 || error.status === 409,\n      // Only retry for timeout or conflict\n      suggestedDelay: error.status === 409 ? 5e3 : void 0,\n      maxRetries: error.status === 408 || error.status === 409 ? 3 : 0\n    };\n  }\n  return {\n    type: \"UNKNOWN_ERROR\",\n    severity: \"MEDIUM\",\n    code: error.status || error.code || \"UNKNOWN\",\n    message: error.message || \"An unknown error occurred\",\n    details: error,\n    timestamp,\n    sessionId: context?.sessionId,\n    accountId: context?.accountId,\n    retryable: true,\n    suggestedDelay: 15e3,\n    // 15 seconds\n    maxRetries: 2\n  };\n}\nfunction determineRecoveryStrategy(scrapingError, context) {\n  if (scrapingError.severity === \"CRITICAL\") {\n    return {\n      strategy: \"CANCEL_SESSION\",\n      reason: `Critical error: ${scrapingError.message}`\n    };\n  }\n  if (scrapingError.type === \"AUTHENTICATION_ERROR\") {\n    return {\n      strategy: \"SKIP\",\n      reason: \"Authentication failed - skipping account\"\n    };\n  }\n  if (scrapingError.type === \"RATE_LIMIT\") {\n    const pauseDuration = Math.min(\n      (scrapingError.suggestedDelay || 6e4) * Math.pow(2, context.consecutiveErrors),\n      3e5\n      // Max 5 minutes\n    );\n    return {\n      strategy: \"PAUSE_SESSION\",\n      delay: pauseDuration,\n      reason: \"Rate limit exceeded - pausing session\"\n    };\n  }\n  if (scrapingError.retryable && context.attemptNumber < (scrapingError.maxRetries || 3)) {\n    const baseDelay = scrapingError.suggestedDelay || 1e4;\n    const exponentialDelay = baseDelay * Math.pow(2, context.attemptNumber - 1);\n    const jitterDelay = exponentialDelay + Math.random() * 5e3;\n    return {\n      strategy: \"BACKOFF\",\n      delay: Math.min(jitterDelay, 12e4),\n      // Max 2 minutes\n      retryCount: context.attemptNumber,\n      maxRetries: scrapingError.maxRetries || 3,\n      reason: `Retrying after ${Math.round(jitterDelay / 1e3)}s (attempt ${context.attemptNumber})`\n    };\n  }\n  if (context.consecutiveErrors >= 10) {\n    return {\n      strategy: \"PAUSE_SESSION\",\n      delay: 3e5,\n      // 5 minutes\n      reason: \"Too many consecutive errors - pausing session for recovery\"\n    };\n  }\n  return {\n    strategy: \"SKIP\",\n    reason: `Max retries exceeded or non-retryable error: ${scrapingError.message}`\n  };\n}\nasync function executeRecoveryStrategy(strategy, context, sessionManager) {\n  try {\n    switch (strategy.strategy) {\n      case \"RETRY\":\n        if (strategy.delay) {\n          await new Promise((resolve) => setTimeout(resolve, strategy.delay));\n        }\n        return {\n          success: true,\n          message: `Retrying after ${strategy.delay || 0}ms delay`,\n          shouldContinue: true\n        };\n      case \"BACKOFF\":\n        if (strategy.delay) {\n          await new Promise((resolve) => setTimeout(resolve, strategy.delay));\n        }\n        return {\n          success: true,\n          message: strategy.reason,\n          shouldContinue: true\n        };\n      case \"SKIP\":\n        await sessionManager.updateSessionProgress(context.sessionId, {\n          skippedAccounts: 1\n        });\n        return {\n          success: true,\n          message: strategy.reason,\n          shouldContinue: true\n        };\n      case \"PAUSE_SESSION\":\n        await sessionManager.pauseSession(context.sessionId);\n        if (strategy.delay) {\n          console.log(`Session ${context.sessionId} paused for ${strategy.delay}ms: ${strategy.reason}`);\n        }\n        return {\n          success: true,\n          message: `Session paused: ${strategy.reason}`,\n          shouldContinue: false\n        };\n      case \"CANCEL_SESSION\":\n        await sessionManager.cancelSession(context.sessionId, strategy.reason);\n        return {\n          success: true,\n          message: `Session cancelled: ${strategy.reason}`,\n          shouldContinue: false\n        };\n      case \"SWITCH_ACCOUNT\":\n        return {\n          success: false,\n          message: \"Account switching not yet implemented\",\n          shouldContinue: false\n        };\n      default:\n        return {\n          success: false,\n          message: \"Unknown recovery strategy\",\n          shouldContinue: false\n        };\n    }\n  } catch (error) {\n    console.error(\"Error executing recovery strategy:\", error);\n    return {\n      success: false,\n      message: `Recovery strategy failed: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n      shouldContinue: false\n    };\n  }\n}\nasync function withErrorHandling(operation, context, sessionManager) {\n  try {\n    const result = await operation();\n    return { success: true, data: result };\n  } catch (error) {\n    const scrapingError = classifyError(error, context);\n    const recoveryStrategy = determineRecoveryStrategy(scrapingError, context);\n    console.error(`Scraping error in session ${context.sessionId}:`, {\n      error: scrapingError,\n      recovery: recoveryStrategy,\n      context\n    });\n    const recoveryResult = await executeRecoveryStrategy(recoveryStrategy, context, sessionManager);\n    if (!recoveryResult.success) {\n      console.error(`Recovery strategy failed for session ${context.sessionId}:`, recoveryResult.message);\n    }\n    return {\n      success: false,\n      error: scrapingError,\n      recovery: recoveryStrategy\n    };\n  }\n}\nfunction validateErrorRecoverySystem() {\n  const capabilities = [\n    \"Error classification (8 types)\",\n    \"Severity assessment (4 levels)\",\n    \"Retry logic with exponential backoff\",\n    \"Rate limit handling\",\n    \"Session pause/resume capability\",\n    \"Account skipping for non-retryable errors\",\n    \"Critical error handling with session cancellation\",\n    \"Jitter in retry delays to prevent thundering herd\"\n  ];\n  return {\n    valid: true,\n    message: \"Error recovery system fully operational\",\n    capabilities\n  };\n}\nexport {\n  classifyError as c,\n  determineRecoveryStrategy as d,\n  executeRecoveryStrategy as e,\n  validateErrorRecoverySystem as v,\n  withErrorHandling as w\n};\n"],"names":[],"mappings":"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"}