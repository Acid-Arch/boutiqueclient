{"version":3,"file":"metrics-CPwQmnJJ.js","sources":["../../../.svelte-kit/adapter-node/chunks/metrics.js"],"sourcesContent":["import { l as logger, L as LogLevel } from \"./logger.js\";\nclass MetricsCollector {\n  static instance;\n  metrics = /* @__PURE__ */ new Map();\n  timers = /* @__PURE__ */ new Map();\n  counters = /* @__PURE__ */ new Map();\n  gauges = /* @__PURE__ */ new Map();\n  static getInstance() {\n    if (!MetricsCollector.instance) {\n      MetricsCollector.instance = new MetricsCollector();\n    }\n    return MetricsCollector.instance;\n  }\n  // Record a timer metric (for response times, etc.)\n  startTimer(name) {\n    const timerId = `${name}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    this.timers.set(timerId, Date.now());\n    return timerId;\n  }\n  endTimer(timerId, labels = {}) {\n    const startTime = this.timers.get(timerId);\n    if (!startTime) return null;\n    const duration = Date.now() - startTime;\n    this.timers.delete(timerId);\n    const metricName = timerId.split(\"_\")[0];\n    this.recordMetric(metricName, duration, \"timer\", labels);\n    return duration;\n  }\n  // Record a simple timer (start and end in one call)\n  recordTimer(name, duration, labels = {}) {\n    this.recordMetric(name, duration, \"timer\", labels);\n  }\n  // Increment a counter\n  incrementCounter(name, value = 1, labels = {}) {\n    const key = this.getMetricKey(name, labels);\n    this.counters.set(key, (this.counters.get(key) || 0) + value);\n    this.recordMetric(name, this.counters.get(key), \"counter\", labels);\n  }\n  // Set a gauge value\n  setGauge(name, value, labels = {}) {\n    const key = this.getMetricKey(name, labels);\n    this.gauges.set(key, value);\n    this.recordMetric(name, value, \"gauge\", labels);\n  }\n  // Record histogram metric\n  recordHistogram(name, value, labels = {}) {\n    this.recordMetric(name, value, \"histogram\", labels);\n  }\n  recordMetric(name, value, type, labels = {}) {\n    const metric = {\n      name,\n      value,\n      type,\n      timestamp: Date.now(),\n      labels\n    };\n    if (!this.metrics.has(name)) {\n      this.metrics.set(name, []);\n    }\n    const metricsList = this.metrics.get(name);\n    metricsList.push(metric);\n    if (metricsList.length > 1e3) {\n      metricsList.splice(0, metricsList.length - 1e3);\n    }\n    if (this.shouldLogMetric(name, value, type)) {\n      logger.logPerformance(LogLevel.DEBUG, `Metric recorded: ${name}`, {\n        metric: name,\n        value,\n        unit: this.getMetricUnit(type),\n        threshold: this.getThreshold(name, type),\n        component: \"metrics-collector\",\n        userId: labels.userId\n      });\n    }\n  }\n  getMetricKey(name, labels) {\n    const labelStr = Object.entries(labels).sort(([a], [b]) => a.localeCompare(b)).map(([k, v]) => `${k}:${v}`).join(\",\");\n    return labelStr ? `${name}{${labelStr}}` : name;\n  }\n  shouldLogMetric(name, value, type) {\n    if (name.includes(\"response_time\") && value > 1e3) return true;\n    if (name.includes(\"error\") && type === \"counter\") return true;\n    if (name.includes(\"memory\") && type === \"gauge\") return true;\n    return false;\n  }\n  getMetricUnit(type) {\n    switch (type) {\n      case \"timer\":\n        return \"ms\";\n      case \"counter\":\n        return \"count\";\n      case \"gauge\":\n        return \"value\";\n      case \"histogram\":\n        return \"distribution\";\n      default:\n        return \"unknown\";\n    }\n  }\n  getThreshold(name, type) {\n    if (type === \"timer\" && name.includes(\"response_time\")) return 500;\n    if (name.includes(\"memory\")) return 1024;\n    return void 0;\n  }\n  // Get current metrics summary\n  getMetrics(since) {\n    const sinceTime = since || Date.now() - 3e5;\n    const summary = {\n      timestamp: Date.now(),\n      period: { start: sinceTime, end: Date.now() },\n      metrics: {}\n    };\n    for (const [name, values] of this.metrics.entries()) {\n      const relevantMetrics = values.filter((m) => m.timestamp >= sinceTime);\n      if (relevantMetrics.length === 0) continue;\n      const metricType = relevantMetrics[0].type;\n      summary.metrics[name] = {\n        type: metricType,\n        count: relevantMetrics.length,\n        ...this.calculateStats(relevantMetrics, metricType)\n      };\n    }\n    return summary;\n  }\n  calculateStats(metrics2, type) {\n    const values = metrics2.map((m) => m.value);\n    switch (type) {\n      case \"timer\":\n      case \"histogram\":\n        return {\n          min: Math.min(...values),\n          max: Math.max(...values),\n          avg: values.reduce((a, b) => a + b, 0) / values.length,\n          p50: this.percentile(values, 0.5),\n          p95: this.percentile(values, 0.95),\n          p99: this.percentile(values, 0.99)\n        };\n      case \"counter\":\n        return {\n          total: values[values.length - 1],\n          // Latest value\n          rate: values.length / ((metrics2[metrics2.length - 1].timestamp - metrics2[0].timestamp) / 1e3)\n        };\n      case \"gauge\":\n        return {\n          current: values[values.length - 1],\n          min: Math.min(...values),\n          max: Math.max(...values),\n          avg: values.reduce((a, b) => a + b, 0) / values.length\n        };\n      default:\n        return {};\n    }\n  }\n  percentile(values, p) {\n    const sorted = [...values].sort((a, b) => a - b);\n    const index = Math.ceil(sorted.length * p) - 1;\n    return sorted[index];\n  }\n  // Clear old metrics to prevent memory leaks\n  clearOldMetrics(olderThan = 36e5) {\n    const cutoff = Date.now() - olderThan;\n    for (const [name, values] of this.metrics.entries()) {\n      const filteredValues = values.filter((m) => m.timestamp >= cutoff);\n      this.metrics.set(name, filteredValues);\n    }\n    this.timers.clear();\n  }\n  // Get system metrics\n  getSystemMetrics() {\n    const memUsage = process.memoryUsage();\n    const cpuUsage = process.cpuUsage();\n    return {\n      timestamp: Date.now(),\n      uptime: process.uptime(),\n      memory: {\n        heapUsed: memUsage.heapUsed,\n        heapTotal: memUsage.heapTotal,\n        external: memUsage.external,\n        rss: memUsage.rss\n      },\n      cpu: {\n        user: cpuUsage.user,\n        system: cpuUsage.system\n      },\n      eventLoop: {\n        // Would need additional libraries for event loop lag\n        // For now, just timestamp\n        lag: 0\n        // Placeholder\n      }\n    };\n  }\n  // Export metrics for external monitoring systems (Prometheus format)\n  exportPrometheusMetrics() {\n    const metrics2 = this.getMetrics();\n    let output = \"\";\n    for (const [name, data] of Object.entries(metrics2.metrics)) {\n      const sanitizedName = name.replace(/[^a-zA-Z0-9_]/g, \"_\");\n      switch (data.type) {\n        case \"counter\":\n          output += `# TYPE ${sanitizedName} counter\n`;\n          output += `${sanitizedName} ${data.total || 0}\n`;\n          break;\n        case \"gauge\":\n          output += `# TYPE ${sanitizedName} gauge\n`;\n          output += `${sanitizedName} ${data.current || 0}\n`;\n          break;\n        case \"timer\":\n        case \"histogram\":\n          output += `# TYPE ${sanitizedName} histogram\n`;\n          output += `${sanitizedName}_sum ${(data.avg || 0) * data.count}\n`;\n          output += `${sanitizedName}_count ${data.count}\n`;\n          if (data.p50) output += `${sanitizedName}{quantile=\"0.5\"} ${data.p50}\n`;\n          if (data.p95) output += `${sanitizedName}{quantile=\"0.95\"} ${data.p95}\n`;\n          if (data.p99) output += `${sanitizedName}{quantile=\"0.99\"} ${data.p99}\n`;\n          break;\n      }\n      output += \"\\n\";\n    }\n    return output;\n  }\n}\nconst metrics = MetricsCollector.getInstance();\nconst recordResponseTime = (endpoint, method, statusCode, duration, userId) => {\n  metrics.recordTimer(\"http_request_duration_ms\", duration, {\n    endpoint,\n    method,\n    status: statusCode.toString(),\n    ...userId && { userId }\n  });\n};\nconst incrementErrorCount = (type, endpoint, userId) => {\n  metrics.incrementCounter(\"errors_total\", 1, {\n    error_type: type,\n    ...endpoint && { endpoint },\n    ...userId && { userId }\n  });\n};\nconst setMemoryUsage = () => {\n  const memUsage = process.memoryUsage();\n  metrics.setGauge(\"memory_heap_used_bytes\", memUsage.heapUsed);\n  metrics.setGauge(\"memory_heap_total_bytes\", memUsage.heapTotal);\n  metrics.setGauge(\"memory_rss_bytes\", memUsage.rss);\n};\n{\n  setInterval(() => {\n    setMemoryUsage();\n    metrics.clearOldMetrics();\n  }, 3e4);\n}\nexport {\n  incrementErrorCount as i,\n  metrics as m,\n  recordResponseTime as r\n};\n"],"names":[],"mappings":"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"}