{"version":3,"file":"_server.ts-CbWmsOQe.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/accounts/_id_/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { getAccountById, checkUsernameExists, updateAccount, deleteAccount } from \"../../../../../chunks/db-loader.js\";\nimport { A as ACCOUNT_STATUSES } from \"../../../../../chunks/status.js\";\nconst GET = async ({ params }) => {\n  try {\n    const id = parseInt(params.id);\n    if (isNaN(id)) {\n      return json({\n        success: false,\n        error: \"Invalid account ID\"\n      }, { status: 400 });\n    }\n    const account = await getAccountById(id);\n    if (!account) {\n      return json({\n        success: false,\n        error: \"Account not found\"\n      }, { status: 404 });\n    }\n    return json({\n      success: true,\n      data: account\n    });\n  } catch (error) {\n    console.error(\"Failed to get account:\", error);\n    return json({\n      success: false,\n      error: \"Failed to retrieve account\"\n    }, { status: 500 });\n  }\n};\nconst PUT = async ({ params, request }) => {\n  try {\n    const id = parseInt(params.id);\n    if (isNaN(id)) {\n      return json({\n        success: false,\n        error: \"Invalid account ID\"\n      }, { status: 400 });\n    }\n    const existingAccount = await getAccountById(id);\n    if (!existingAccount) {\n      return json({\n        success: false,\n        error: \"Account not found\"\n      }, { status: 404 });\n    }\n    const data = await request.json();\n    const {\n      recordId,\n      instagramUsername,\n      instagramPassword,\n      emailAddress,\n      emailPassword,\n      status,\n      imapStatus,\n      assignedDeviceId,\n      assignedCloneNumber,\n      assignedPackageName\n    } = data;\n    const errors = {};\n    if (instagramUsername !== void 0) {\n      if (!instagramUsername) {\n        errors.instagramUsername = \"Instagram username is required\";\n      } else if (instagramUsername.length < 3) {\n        errors.instagramUsername = \"Instagram username must be at least 3 characters\";\n      } else {\n        const usernameExists = await checkUsernameExists(instagramUsername, id);\n        if (usernameExists) {\n          errors.instagramUsername = \"This Instagram username is already registered\";\n        }\n      }\n    }\n    if (instagramPassword !== void 0) {\n      if (!instagramPassword) {\n        errors.instagramPassword = \"Instagram password is required\";\n      } else if (instagramPassword.length < 6) {\n        errors.instagramPassword = \"Instagram password must be at least 6 characters\";\n      }\n    }\n    if (emailAddress !== void 0) {\n      if (!emailAddress) {\n        errors.emailAddress = \"Email address is required\";\n      } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(emailAddress)) {\n        errors.emailAddress = \"Please enter a valid email address\";\n      }\n    }\n    if (emailPassword !== void 0) {\n      if (!emailPassword) {\n        errors.emailPassword = \"Email password is required\";\n      } else if (emailPassword.length < 6) {\n        errors.emailPassword = \"Email password must be at least 6 characters\";\n      }\n    }\n    if (status !== void 0 && !ACCOUNT_STATUSES.includes(status)) {\n      errors.status = \"Please select a valid status\";\n    }\n    if (imapStatus !== void 0 && ![\"On\", \"Off\"].includes(imapStatus)) {\n      errors.imapStatus = \"IMAP status must be On or Off\";\n    }\n    if (Object.keys(errors).length > 0) {\n      return json({\n        success: false,\n        errors\n      }, { status: 400 });\n    }\n    const updateData = {};\n    if (recordId !== void 0) updateData.recordId = recordId;\n    if (instagramUsername !== void 0) updateData.instagramUsername = instagramUsername;\n    if (instagramPassword !== void 0) updateData.instagramPassword = instagramPassword;\n    if (emailAddress !== void 0) updateData.emailAddress = emailAddress;\n    if (emailPassword !== void 0) updateData.emailPassword = emailPassword;\n    if (status !== void 0) updateData.status = status;\n    if (imapStatus !== void 0) updateData.imapStatus = imapStatus;\n    if (assignedDeviceId !== void 0) updateData.assignedDeviceId = assignedDeviceId;\n    if (assignedCloneNumber !== void 0) updateData.assignedCloneNumber = assignedCloneNumber;\n    if (assignedPackageName !== void 0) updateData.assignedPackageName = assignedPackageName;\n    const updatedAccount = await updateAccount(id, updateData);\n    return json({\n      success: true,\n      data: updatedAccount\n    });\n  } catch (error) {\n    console.error(\"Failed to update account:\", error);\n    return json({\n      success: false,\n      error: \"Failed to update account\"\n    }, { status: 500 });\n  }\n};\nconst DELETE = async ({ params }) => {\n  try {\n    const id = parseInt(params.id);\n    if (isNaN(id)) {\n      return json({\n        success: false,\n        error: \"Invalid account ID\"\n      }, { status: 400 });\n    }\n    const existingAccount = await getAccountById(id);\n    if (!existingAccount) {\n      return json({\n        success: false,\n        error: \"Account not found\"\n      }, { status: 404 });\n    }\n    await deleteAccount(id);\n    return json({\n      success: true,\n      message: \"Account deleted successfully\"\n    });\n  } catch (error) {\n    console.error(\"Failed to delete account:\", error);\n    return json({\n      success: false,\n      error: \"Failed to delete account\"\n    }, { status: 500 });\n  }\n};\nconst PATCH = async ({ params, request }) => {\n  return PUT({ params, request });\n};\nexport {\n  DELETE,\n  GET,\n  PATCH,\n  PUT\n};\n"],"names":[],"mappings":"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"}