{"version":3,"file":"3-KR0k3kvL.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/client-portal/_page.server.ts.js","../../../.svelte-kit/adapter-node/nodes/3.js"],"sourcesContent":["import { prisma } from \"../../../chunks/database.js\";\nimport { l as logUserModelAccess, g as getAccountsFilterForUser } from \"../../../chunks/model-access.js\";\nimport pg from \"pg\";\nconst load = async ({ locals }) => {\n  if (locals.user) {\n    try {\n      const recentActivity = await getRecentActivity(locals.user.id);\n      const stats = await getDashboardStats(locals.user.id, locals.user);\n      return {\n        user: {\n          id: locals.user.id,\n          name: locals.user.name,\n          email: locals.user.email,\n          role: locals.user.role,\n          company: locals.user.company,\n          avatar: locals.user.avatar,\n          subscription: locals.user.subscription,\n          isActive: locals.user.isActive\n        },\n        stats,\n        recentActivity\n      };\n    } catch (error) {\n      console.error(\"Error loading dashboard data:\", error);\n      return {\n        user: {\n          id: locals.user.id,\n          name: locals.user.name,\n          email: locals.user.email,\n          role: locals.user.role,\n          company: locals.user.company,\n          avatar: locals.user.avatar,\n          subscription: locals.user.subscription,\n          isActive: locals.user.isActive\n        },\n        stats: {\n          totalAccounts: 0,\n          activeAccounts: 0,\n          assignedDevices: 0,\n          totalFollowers: 0\n        },\n        recentActivity: []\n      };\n    }\n  }\n  return {\n    user: null,\n    stats: {\n      totalAccounts: 0,\n      activeAccounts: 0,\n      assignedDevices: 0,\n      totalFollowers: 0\n    },\n    recentActivity: []\n  };\n};\nasync function getRecentActivity(userId) {\n  try {\n    try {\n      const activities = await prisma.auditLog.findMany({\n        where: {\n          userId: parseInt(userId),\n          eventType: {\n            in: [\"ACCOUNT_LOGIN\", \"DEVICE_ASSIGNMENT\", \"SCRAPING_SESSION\", \"USER_LOGIN\"]\n          }\n        },\n        orderBy: { timestamp: \"desc\" },\n        take: 10,\n        include: {\n          user: {\n            select: {\n              firstName: true,\n              lastName: true\n            }\n          }\n        }\n      });\n      return activities.map((activity, index) => ({\n        id: activity.id || index + 1,\n        type: activity.eventType?.toLowerCase().replace(\"_\", \"\") || \"unknown\",\n        account: activity.details?.account || `@user_${activity.userId}`,\n        device: activity.details?.device || null,\n        time: formatTimeAgo(activity.timestamp),\n        status: activity.severity === \"ERROR\" ? \"error\" : \"success\"\n      }));\n    } catch (prismaError) {\n      console.log(\"‚ö†Ô∏è  Prisma auditLog failed, using direct SQL for recent activity\");\n      return await getRecentActivityDirectSQL(userId);\n    }\n  } catch (error) {\n    console.error(\"Error fetching recent activity:\", error);\n    return [];\n  }\n}\nasync function getRecentActivityDirectSQL(userId) {\n  const { Client } = pg;\n  const client = new Client({\n    connectionString: process.env.DATABASE_URL || \"postgresql://iglogin:boutiquepassword123@5.78.151.248:5432/igloginagent?sslmode=disable&connect_timeout=30\"\n  });\n  try {\n    await client.connect();\n    const activityQuery = `\n\t\t\tSELECT \n\t\t\t\tid, user_id, event_type, details, severity, timestamp, created_at\n\t\t\tFROM audit_logs \n\t\t\tWHERE user_id = $1 \n\t\t\tAND event_type IN ('ACCOUNT_LOGIN', 'DEVICE_ASSIGNMENT', 'SCRAPING_SESSION', 'USER_LOGIN')\n\t\t\tORDER BY timestamp DESC \n\t\t\tLIMIT 10\n\t\t`;\n    const result = await client.query(activityQuery, [parseInt(userId)]);\n    return result.rows.map((row, index) => ({\n      id: row.id || index + 1,\n      type: row.event_type?.toLowerCase().replace(\"_\", \"\") || \"unknown\",\n      account: row.details?.account || `@user_${row.user_id}`,\n      device: row.details?.device || null,\n      time: formatTimeAgo(row.timestamp || row.created_at),\n      status: row.severity === \"ERROR\" ? \"error\" : \"success\"\n    }));\n  } catch (sqlError) {\n    console.log(\"‚ö†Ô∏è  SQL query for audit logs failed, returning empty activity\");\n    return [];\n  } finally {\n    await client.end();\n  }\n}\nfunction formatTimeAgo(date) {\n  if (!date) return \"Unknown time\";\n  const now = /* @__PURE__ */ new Date();\n  const diffInMs = now.getTime() - date.getTime();\n  const diffInMinutes = Math.floor(diffInMs / (1e3 * 60));\n  const diffInHours = Math.floor(diffInMs / (1e3 * 60 * 60));\n  const diffInDays = Math.floor(diffInMs / (1e3 * 60 * 60 * 24));\n  if (diffInMinutes < 1) return \"Just now\";\n  if (diffInMinutes < 60) return `${diffInMinutes} minute${diffInMinutes > 1 ? \"s\" : \"\"} ago`;\n  if (diffInHours < 24) return `${diffInHours} hour${diffInHours > 1 ? \"s\" : \"\"} ago`;\n  if (diffInDays < 7) return `${diffInDays} day${diffInDays > 1 ? \"s\" : \"\"} ago`;\n  return date.toLocaleDateString();\n}\nasync function getAccountsWithModelAccess(user) {\n  const { Client } = pg;\n  const client = new Client({\n    connectionString: process.env.DATABASE_URL || \"postgresql://iglogin:boutiquepassword123@5.78.151.248:5432/igloginagent?sslmode=disable&connect_timeout=30\"\n  });\n  try {\n    await client.connect();\n    let modelFilter = \"\";\n    const queryParams = [user.id];\n    if (user.email && user.email.includes(\"@gmail.com\")) {\n      modelFilter = `OR (model = 'Dillion' AND (account_type != 'ML_TREND_FINDER' OR account_type IS NULL))`;\n      console.log(`üîë SQL: Adding Dillion model access for Gmail user: ${user.email}`);\n    }\n    if (user.email && (user.email.includes(\"@hotmail.\") || user.email.includes(\"@live.\") || user.email.includes(\"@outlook.\"))) {\n      modelFilter = `OR (model = 'katie' AND (account_type != 'ML_TREND_FINDER' OR account_type IS NULL))`;\n      console.log(`üîë SQL: Adding katie model access for Hotmail user: ${user.email}`);\n    }\n    const accountsQuery = `\n\t\t\tSELECT \n\t\t\t\tid, instagram_username, instagram_password, email_address, email_password,\n\t\t\t\tstatus, imap_status, assigned_device_id, assigned_clone_number, assigned_package_name,\n\t\t\t\tassignment_timestamp, login_timestamp, created_at, updated_at,\n\t\t\t\towner_id, account_type, visibility, is_shared, model\n\t\t\tFROM ig_accounts \n\t\t\tWHERE (\n\t\t\t\t(owner_id = $1 AND (account_type != 'ML_TREND_FINDER' OR account_type IS NULL))\n\t\t\t\tOR \n\t\t\t\t(is_shared = true AND visibility IN ('SHARED', 'PUBLIC') AND (account_type != 'ML_TREND_FINDER' OR account_type IS NULL))\n\t\t\t\t${modelFilter}\n\t\t\t)\n\t\t\tORDER BY created_at DESC \n\t\t\tLIMIT 1000\n\t\t`;\n    const result = await client.query(accountsQuery, queryParams);\n    const accounts = result.rows.map((row) => ({\n      id: row.id,\n      recordId: row.record_id,\n      instagramUsername: row.instagram_username,\n      instagramPassword: row.instagram_password,\n      emailAddress: row.email_address,\n      emailPassword: row.email_password,\n      status: row.status,\n      imapStatus: row.imap_status,\n      assignedDeviceId: row.assigned_device_id,\n      assignedCloneNumber: row.assigned_clone_number,\n      assignedPackageName: row.assigned_package_name,\n      assignmentTimestamp: row.assignment_timestamp,\n      loginTimestamp: row.login_timestamp,\n      createdAt: row.created_at,\n      updatedAt: row.updated_at,\n      ownerId: row.owner_id,\n      accountType: row.account_type,\n      visibility: row.visibility,\n      isShared: row.is_shared,\n      model: row.model\n    }));\n    return { accounts, totalCount: accounts.length };\n  } finally {\n    await client.end();\n  }\n}\nasync function getDashboardStats(userId, user) {\n  try {\n    logUserModelAccess(user);\n    let accounts = [];\n    try {\n      const accountsFilter = getAccountsFilterForUser(user);\n      accounts = await prisma.igAccount.findMany({\n        where: accountsFilter\n      });\n      console.log(`üìä Found ${accounts.length} accounts via Prisma for user ${user.email}`);\n    } catch (prismaError) {\n      console.log(`‚ö†Ô∏è  Prisma failed, using direct SQL with model access for user ${user.email}`);\n      const { accounts: sqlAccounts } = await getAccountsWithModelAccess(user);\n      accounts = sqlAccounts;\n      console.log(`üìä Found ${accounts.length} accounts via SQL for user ${user.email}`);\n    }\n    if (accounts.length > 0) {\n      console.log(`üîç Sample accounts: ${accounts.slice(0, 3).map((a) => `@${a.instagramUsername}`).join(\", \")}`);\n    }\n    const totalAccounts = accounts.length;\n    const activeAccounts = accounts.filter(\n      (account) => account.status && [\"active\", \"assigned\", \"logged in\"].includes(account.status.toLowerCase())\n    ).length;\n    const assignedDevices = accounts.filter(\n      (account) => account.assignedDeviceId !== null\n    ).length;\n    const totalFollowers = 0;\n    return {\n      totalAccounts,\n      activeAccounts,\n      assignedDevices,\n      totalFollowers\n    };\n  } catch (error) {\n    console.error(\"Error fetching dashboard stats:\", error);\n    return {\n      totalAccounts: 0,\n      activeAccounts: 0,\n      assignedDevices: 0,\n      totalFollowers: 0\n    };\n  }\n}\nexport {\n  load\n};\n","import * as server from '../entries/pages/client-portal/_page.server.ts.js';\n\nexport const index = 3;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/client-portal/_page.svelte.js')).default;\nexport { server };\nexport const server_id = \"src/routes/client-portal/+page.server.ts\";\nexport const imports = [\"_app/immutable/nodes/3.eSrEygCJ.js\",\"_app/immutable/chunks/DsnmJJEf.js\",\"_app/immutable/chunks/DX-Oc8op.js\",\"_app/immutable/chunks/3zx2OM-S.js\",\"_app/immutable/chunks/Dwjkgfq3.js\",\"_app/immutable/chunks/z8oQ6GeD.js\",\"_app/immutable/chunks/BrzuSUaY.js\",\"_app/immutable/chunks/lPcixCUF.js\",\"_app/immutable/chunks/K5chL7Zt.js\",\"_app/immutable/chunks/BID1lDIu.js\",\"_app/immutable/chunks/DdD0hk9E.js\",\"_app/immutable/chunks/CApEzOLg.js\",\"_app/immutable/chunks/Dcut3OIX.js\"];\nexport const stylesheets = [];\nexport const fonts = [];\n"],"names":[],"mappings":"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"}