{"version":3,"file":"_server.ts-WK9IyEmX.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/health/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { L as LogLevel, l as logger } from \"../../../../chunks/logger.js\";\nimport { p as prisma } from \"../../../../chunks/prisma.js\";\nlet lastHealthCheck = null;\nlet lastHealthCheckTime = 0;\nconst CACHE_DURATION = 3e4;\nasync function checkDatabase() {\n  const start = Date.now();\n  try {\n    await prisma.$queryRaw`SELECT 1 as health_check`;\n    const responseTime = Date.now() - start;\n    if (responseTime > 1e3) {\n      return {\n        status: \"warn\",\n        responseTime,\n        message: \"Database responding slowly\",\n        details: { threshold: \"1000ms\", actual: `${responseTime}ms` }\n      };\n    }\n    return {\n      status: \"pass\",\n      responseTime,\n      message: \"Database connection healthy\"\n    };\n  } catch (error) {\n    return {\n      status: \"fail\",\n      responseTime: Date.now() - start,\n      message: \"Database connection failed\",\n      details: {\n        error: error instanceof Error ? error.message : \"Unknown error\"\n      }\n    };\n  }\n}\nasync function checkMemory() {\n  const start = Date.now();\n  try {\n    const memUsage = process.memoryUsage();\n    const memUsageGB = memUsage.heapUsed / 1024 / 1024 / 1024;\n    const memLimitGB = 1;\n    const responseTime = Date.now() - start;\n    if (memUsageGB > memLimitGB * 0.9) {\n      return {\n        status: \"warn\",\n        responseTime,\n        message: \"High memory usage detected\",\n        details: {\n          heapUsedGB: Math.round(memUsageGB * 100) / 100,\n          heapTotalGB: Math.round(memUsage.heapTotal / 1024 / 1024 / 1024 * 100) / 100,\n          threshold: `${memLimitGB}GB`\n        }\n      };\n    }\n    if (memUsageGB > memLimitGB) {\n      return {\n        status: \"fail\",\n        responseTime,\n        message: \"Memory usage critical\",\n        details: {\n          heapUsedGB: Math.round(memUsageGB * 100) / 100,\n          heapTotalGB: Math.round(memUsage.heapTotal / 1024 / 1024 / 1024 * 100) / 100,\n          threshold: `${memLimitGB}GB`\n        }\n      };\n    }\n    return {\n      status: \"pass\",\n      responseTime,\n      message: \"Memory usage normal\",\n      details: {\n        heapUsedGB: Math.round(memUsageGB * 100) / 100,\n        heapTotalGB: Math.round(memUsage.heapTotal / 1024 / 1024 / 1024 * 100) / 100\n      }\n    };\n  } catch (error) {\n    return {\n      status: \"fail\",\n      responseTime: Date.now() - start,\n      message: \"Memory check failed\",\n      details: {\n        error: error instanceof Error ? error.message : \"Unknown error\"\n      }\n    };\n  }\n}\nasync function checkExternalServices() {\n  const start = Date.now();\n  try {\n    return {\n      status: \"pass\",\n      responseTime: Date.now() - start,\n      message: \"External services healthy\"\n    };\n  } catch (error) {\n    return {\n      status: \"fail\",\n      responseTime: Date.now() - start,\n      message: \"External service check failed\",\n      details: {\n        error: error instanceof Error ? error.message : \"Unknown error\"\n      }\n    };\n  }\n}\nfunction getOverallStatus(checks) {\n  const statuses = Object.values(checks).map((check) => check.status);\n  if (statuses.some((status) => status === \"fail\")) {\n    return \"unhealthy\";\n  }\n  if (statuses.some((status) => status === \"warn\")) {\n    return \"degraded\";\n  }\n  return \"healthy\";\n}\nasync function performHealthCheck() {\n  const startTime = Date.now();\n  const startCpuUsage = process.cpuUsage();\n  const [databaseCheck, memoryCheck, externalCheck] = await Promise.all([\n    checkDatabase(),\n    checkMemory(),\n    checkExternalServices()\n  ]);\n  const checks = {\n    database: databaseCheck,\n    memory: memoryCheck,\n    external: externalCheck\n  };\n  const endTime = Date.now();\n  const endCpuUsage = process.cpuUsage(startCpuUsage);\n  const healthStatus = {\n    status: getOverallStatus(checks),\n    timestamp: (/* @__PURE__ */ new Date()).toISOString(),\n    version: process.env.npm_package_version || \"1.0.0\",\n    environment: \"production\",\n    uptime: process.uptime(),\n    checks,\n    performance: {\n      responseTime: endTime - startTime,\n      memoryUsage: process.memoryUsage(),\n      cpuUsage: endCpuUsage\n    }\n  };\n  return healthStatus;\n}\nconst GET = async ({ url }) => {\n  const includeDetails = url.searchParams.get(\"details\") === \"true\";\n  const skipCache = url.searchParams.get(\"cache\") === \"false\";\n  try {\n    let healthStatus;\n    const now = Date.now();\n    if (!skipCache && lastHealthCheck && now - lastHealthCheckTime < CACHE_DURATION) {\n      healthStatus = lastHealthCheck;\n    } else {\n      healthStatus = await performHealthCheck();\n      lastHealthCheck = healthStatus;\n      lastHealthCheckTime = now;\n    }\n    const logLevel = healthStatus.status === \"healthy\" ? LogLevel.DEBUG : healthStatus.status === \"degraded\" ? LogLevel.WARN : LogLevel.ERROR;\n    logger.logSystem(logLevel, `Health check completed: ${healthStatus.status}`, {\n      component: \"health-check\",\n      event: \"health_check_performed\",\n      details: {\n        status: healthStatus.status,\n        responseTime: healthStatus.performance.responseTime,\n        databaseStatus: healthStatus.checks.database.status,\n        memoryStatus: healthStatus.checks.memory.status,\n        uptime: healthStatus.uptime\n      }\n    });\n    const httpStatus = healthStatus.status === \"healthy\" ? 200 : healthStatus.status === \"degraded\" ? 207 : (\n      // Multi-Status\n      503\n    );\n    const response = includeDetails ? healthStatus : {\n      status: healthStatus.status,\n      timestamp: healthStatus.timestamp,\n      uptime: healthStatus.uptime,\n      version: healthStatus.version\n    };\n    return json(response, {\n      status: httpStatus,\n      headers: {\n        \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n        \"Pragma\": \"no-cache\",\n        \"Expires\": \"0\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  } catch (error) {\n    logger.logSystem(LogLevel.ERROR, \"Health check endpoint failed\", {\n      component: \"health-check\",\n      event: \"health_check_failed\",\n      error: error instanceof Error ? error : void 0,\n      details: {\n        error: error instanceof Error ? error.message : \"Unknown error\"\n      }\n    });\n    return json({\n      status: \"unhealthy\",\n      timestamp: (/* @__PURE__ */ new Date()).toISOString(),\n      error: \"Health check failed\",\n      message: error instanceof Error ? error.message : \"Unknown error\"\n    }, {\n      status: 503,\n      headers: {\n        \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n};\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}