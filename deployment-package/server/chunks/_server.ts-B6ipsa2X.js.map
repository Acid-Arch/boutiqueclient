{"version":3,"file":"_server.ts-B6ipsa2X.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/auth/request-ip-access/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { e as extractPublicIP } from \"../../../../../chunks/ip-utils.js\";\nimport pg from \"pg\";\nconst { Pool } = pg;\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL,\n  ssl: process.env.NODE_ENV === \"production\" ? { rejectUnauthorized: false } : false\n});\nasync function sendBreakGlassEmail(email, token, publicIP) {\n  console.log(`\nðŸ”“ Break-Glass IP Access Request\n================================\nEmail: ${email}\nPublic IP: ${publicIP}\nAccess Token: ${token}\nValid for: 24 hours\n\nClick this link to grant temporary access:\n${process.env.DEV_SERVER_URL || \"http://localhost:5173\"}/auth/grant-ip-access?token=${token}\n\nThis link will add your current IP (${publicIP}) to the whitelist for 24 hours.\n  `);\n  return true;\n}\nconst POST = async ({ request }) => {\n  try {\n    const { email, reason } = await request.json();\n    if (!email) {\n      return json(\n        {\n          success: false,\n          error: \"Email address is required\"\n        },\n        { status: 400 }\n      );\n    }\n    const extractedIP = extractPublicIP(request);\n    if (!extractedIP || !extractedIP.isPublic) {\n      return json(\n        {\n          success: false,\n          error: \"Could not determine your public IP address\"\n        },\n        { status: 400 }\n      );\n    }\n    const publicIP = extractedIP.ip;\n    const client = await pool.connect();\n    let userId = null;\n    try {\n      const userResult = await client.query(\n        \"SELECT id, email FROM users WHERE email = $1 AND is_active = true\",\n        [email]\n      );\n      if (userResult.rows.length === 0) {\n        return json(\n          {\n            success: false,\n            error: \"No active account found with this email address\"\n          },\n          { status: 404 }\n        );\n      }\n      userId = userResult.rows[0].id;\n      const existingRequest = await client.query(`\n        SELECT id, expires_at FROM ip_access_requests \n        WHERE user_id = $1 AND public_ip = $2 AND used = false AND expires_at > NOW()\n      `, [userId, publicIP]);\n      if (existingRequest.rows.length > 0) {\n        return json(\n          {\n            success: false,\n            error: \"A pending access request already exists for this IP address\"\n          },\n          { status: 409 }\n        );\n      }\n      const token = crypto.randomUUID() + \"-\" + Date.now().toString(36);\n      const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1e3);\n      await client.query(`\n        INSERT INTO ip_access_requests (user_id, public_ip, token, reason, expires_at)\n        VALUES ($1, $2, $3, $4, $5)\n      `, [userId, publicIP, token, reason || null, expiresAt]);\n      await sendBreakGlassEmail(email, token, publicIP);\n      await client.query(`\n        INSERT INTO ip_access_logs (user_id, email, public_ip, access_granted, denial_reason, user_agent)\n        VALUES ($1, $2, $3, false, 'break_glass_request_sent', $4)\n      `, [userId, email, publicIP, request.headers.get(\"user-agent\")]);\n      return json({\n        success: true,\n        message: \"Access request sent. Please check your email for further instructions.\",\n        expiresIn: \"24 hours\"\n      });\n    } finally {\n      client.release();\n    }\n  } catch (error) {\n    console.error(\"Break-glass request error:\", error);\n    return json(\n      {\n        success: false,\n        error: \"Internal server error\"\n      },\n      { status: 500 }\n    );\n  }\n};\nconst PATCH = async () => {\n  try {\n    const client = await pool.connect();\n    try {\n      await client.query(`\n        CREATE TABLE IF NOT EXISTS ip_access_requests (\n          id SERIAL PRIMARY KEY,\n          user_id INTEGER NOT NULL,\n          public_ip VARCHAR(45) NOT NULL,\n          token VARCHAR(255) NOT NULL UNIQUE,\n          reason TEXT,\n          used BOOLEAN DEFAULT false,\n          created_at TIMESTAMP DEFAULT NOW(),\n          expires_at TIMESTAMP NOT NULL,\n          granted_at TIMESTAMP,\n          FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\n        )\n      `);\n      await client.query(`\n        CREATE INDEX IF NOT EXISTS idx_ip_access_requests_token ON ip_access_requests(token)\n      `);\n      await client.query(`\n        CREATE INDEX IF NOT EXISTS idx_ip_access_requests_user ON ip_access_requests(user_id)\n      `);\n      await client.query(`\n        CREATE INDEX IF NOT EXISTS idx_ip_access_requests_expires ON ip_access_requests(expires_at)\n      `);\n      return json({\n        success: true,\n        message: \"Break-glass access table created successfully\"\n      });\n    } finally {\n      client.release();\n    }\n  } catch (error) {\n    console.error(\"Table creation error:\", error);\n    return json(\n      {\n        success: false,\n        error: \"Failed to create break-glass access table\"\n      },\n      { status: 500 }\n    );\n  }\n};\nexport {\n  PATCH,\n  POST\n};\n"],"names":[],"mappings":"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"}