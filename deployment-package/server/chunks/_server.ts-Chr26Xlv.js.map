{"version":3,"file":"_server.ts-Chr26Xlv.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/accounts/bulk-field/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { prisma } from \"../../../../../chunks/db-loader.js\";\nimport { A as ACCOUNT_STATUSES } from \"../../../../../chunks/status.js\";\nconst PATCH = async ({ request }) => {\n  try {\n    const { accountIds, field, value } = await request.json();\n    if (!accountIds || !Array.isArray(accountIds) || accountIds.length === 0) {\n      return json({\n        success: false,\n        error: \"Account IDs array is required\"\n      }, { status: 400 });\n    }\n    if (!field) {\n      return json({\n        success: false,\n        error: \"Field name is required\"\n      }, { status: 400 });\n    }\n    let validationError = null;\n    switch (field) {\n      case \"status\":\n        if (!ACCOUNT_STATUSES.includes(value)) {\n          validationError = \"Invalid status value\";\n        }\n        break;\n      case \"assignedDeviceId\":\n        break;\n      case \"assignedCloneNumber\":\n        if (value !== null && (isNaN(value) || value < 1 || value > 32)) {\n          validationError = \"Clone number must be between 1 and 32\";\n        }\n        break;\n      case \"imapStatus\":\n        if (![\"On\", \"Off\"].includes(value)) {\n          validationError = \"IMAP status must be On or Off\";\n        }\n        break;\n      default:\n        validationError = `Field '${field}' is not allowed for bulk updates`;\n    }\n    if (validationError) {\n      return json({\n        success: false,\n        error: validationError\n      }, { status: 400 });\n    }\n    const existingAccounts = await prisma.igAccount.findMany({\n      where: {\n        id: { in: accountIds.map((id) => parseInt(id)) }\n      },\n      select: { id: true }\n    });\n    const foundIds = existingAccounts.map((acc) => acc.id);\n    const missingIds = accountIds.filter((id) => !foundIds.includes(parseInt(id)));\n    if (missingIds.length > 0) {\n      return json({\n        success: false,\n        error: `Accounts not found: ${missingIds.join(\", \")}`\n      }, { status: 404 });\n    }\n    const updateData = {};\n    switch (field) {\n      case \"status\":\n        updateData.status = value;\n        if (value === \"Logged In\") {\n          updateData.loginTimestamp = /* @__PURE__ */ new Date();\n        }\n        break;\n      case \"assignedDeviceId\":\n        updateData.assignedDeviceId = value || null;\n        if (value) {\n          updateData.assignmentTimestamp = /* @__PURE__ */ new Date();\n        } else {\n          updateData.assignedCloneNumber = null;\n          updateData.assignedPackageName = null;\n          updateData.assignmentTimestamp = null;\n        }\n        break;\n      case \"assignedCloneNumber\":\n        updateData.assignedCloneNumber = value;\n        break;\n      case \"imapStatus\":\n        updateData.imapStatus = value;\n        break;\n    }\n    updateData.updatedAt = /* @__PURE__ */ new Date();\n    const result = await prisma.igAccount.updateMany({\n      where: {\n        id: { in: accountIds.map((id) => parseInt(id)) }\n      },\n      data: updateData\n    });\n    return json({\n      success: true,\n      updatedCount: result.count,\n      field,\n      value,\n      accountIds\n    });\n  } catch (error) {\n    console.error(\"Failed to bulk update account field:\", error);\n    return json({\n      success: false,\n      error: \"Failed to bulk update account field\"\n    }, { status: 500 });\n  }\n};\nexport {\n  PATCH\n};\n"],"names":[],"mappings":"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"}