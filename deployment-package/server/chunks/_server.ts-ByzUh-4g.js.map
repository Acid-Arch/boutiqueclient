{"version":3,"file":"_server.ts-ByzUh-4g.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/scraping/sessions/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { g as getSessionStats, a as getSessions, u as updateSessionProgress, c as cancelSession, p as pauseSession, s as startSession, b as createBulkSession } from \"../../../../../chunks/session-manager.js\";\nconst GET = async ({ url, locals }) => {\n  try {\n    const action = url.searchParams.get(\"action\");\n    if (action === \"stats\") {\n      const stats = await getSessionStats();\n      return json({\n        success: true,\n        stats\n      });\n    }\n    const status = url.searchParams.get(\"status\") || \"all\";\n    const limit = parseInt(url.searchParams.get(\"limit\") || \"20\");\n    const page = parseInt(url.searchParams.get(\"page\") || \"1\");\n    const result = await getSessions({\n      status,\n      limit,\n      page\n    });\n    return json({\n      success: true,\n      ...result\n    });\n  } catch (error) {\n    console.error(\"Sessions API error:\", error);\n    const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n    const fallbackPage = parseInt(url.searchParams.get(\"page\") || \"1\");\n    const fallbackLimit = parseInt(url.searchParams.get(\"limit\") || \"20\");\n    return json(\n      {\n        success: false,\n        error: \"Failed to load sessions\",\n        details: errorMessage,\n        sessions: [],\n        total: 0,\n        page: fallbackPage,\n        limit: fallbackLimit,\n        totalPages: 0\n      },\n      { status: 500 }\n    );\n  }\n};\nconst POST = async ({ request, locals }) => {\n  try {\n    const data = await request.json();\n    const { action, sessionId, sessionType, targetAccounts, options } = data;\n    switch (action) {\n      case \"create\":\n        if (!sessionType || !targetAccounts || !Array.isArray(targetAccounts)) {\n          return json(\n            { success: false, error: \"Missing required fields: sessionType, targetAccounts\" },\n            { status: 400 }\n          );\n        }\n        const newSessionId = await createBulkSession(sessionType, targetAccounts, options || {});\n        return json({\n          success: true,\n          sessionId: newSessionId,\n          message: \"Bulk scraping session created successfully\"\n        });\n      case \"start\":\n        if (!sessionId) {\n          return json(\n            { success: false, error: \"Missing required field: sessionId\" },\n            { status: 400 }\n          );\n        }\n        await startSession(sessionId);\n        return json({\n          success: true,\n          message: \"Session started successfully\"\n        });\n      case \"pause\":\n        if (!sessionId) {\n          return json(\n            { success: false, error: \"Missing required field: sessionId\" },\n            { status: 400 }\n          );\n        }\n        await pauseSession(sessionId);\n        return json({\n          success: true,\n          message: \"Session paused successfully\"\n        });\n      case \"cancel\":\n        if (!sessionId) {\n          return json(\n            { success: false, error: \"Missing required field: sessionId\" },\n            { status: 400 }\n          );\n        }\n        const { reason } = data;\n        await cancelSession(sessionId, reason);\n        return json({\n          success: true,\n          message: \"Session cancelled successfully\"\n        });\n      case \"updateProgress\":\n        if (!sessionId) {\n          return json(\n            { success: false, error: \"Missing required field: sessionId\" },\n            { status: 400 }\n          );\n        }\n        const { progress } = data;\n        await updateSessionProgress(sessionId, progress);\n        return json({\n          success: true,\n          message: \"Session progress updated successfully\"\n        });\n      default:\n        return json(\n          { success: false, error: \"Invalid action specified\" },\n          { status: 400 }\n        );\n    }\n  } catch (error) {\n    console.error(\"Sessions POST API error:\", error);\n    const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n    return json(\n      {\n        success: false,\n        error: \"Failed to process session request\",\n        details: errorMessage\n      },\n      { status: 500 }\n    );\n  }\n};\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}