# DEVELOPMENT Environment Configuration Template
# Copy this file to .env for local development
# 
# SECURITY NOTE: This is for development only
# - Uses localhost and development-safe defaults
# - Some security features are relaxed for easier development
# - Never use these settings in production
#

# =============================================================================
# Environment Configuration
# =============================================================================
NODE_ENV=development
CHATBOT_MODE=development-local

# =============================================================================
# Development Flags  
# =============================================================================
# Set to true to bypass login page during development (DEVELOPMENT ONLY)
DISABLE_LOGIN_PAGE=false

# Test CLIENT user for development (when DISABLE_LOGIN_PAGE=true)
# Options: sarah.marketing@techstartup.co, mike.social@fashionbrand.com, lisa.growth@fitnessgym.net, david.digital@restaurantchain.biz, admin
TEST_CLIENT_USER_EMAIL=sarah.marketing@techstartup.co

# =============================================================================
# Application Configuration
# =============================================================================
PUBLIC_APP_NAME="Client Portal (Dev)"
INSTANCE_ID="dev-instance-local"

# =============================================================================
# Port Configuration (Development - avoid conflicts with production)
# =============================================================================
PORT=5173
PUBLIC_WS_PORT=8743
PREVIEW_PORT=4874
TEST_PORT=5877

# =============================================================================
# URLs (Development)
# =============================================================================
PUBLIC_APP_URL="http://localhost:5173"
PUBLIC_WS_URL="ws://localhost:8743"
DEV_SERVER_URL="http://localhost:5173"
WEBSOCKET_URL="ws://localhost:5173"

# Production URLs (for reference, not used in development)
PRODUCTION_BASE_URL="https://localhost:5173"

# =============================================================================
# Database Configuration (Development)
# =============================================================================
# For development, you can use either:
# 1. Local PostgreSQL instance
# 2. Remote development database (shared team database)

# Option 1: Local PostgreSQL
DATABASE_URL="postgresql://postgres:devpassword@localhost:5432/boutique_dev?sslmode=disable&connect_timeout=30"

# Option 2: Remote development database (if using shared development server)
# DATABASE_URL="postgresql://username:password@dev-server:5432/boutique_dev?sslmode=disable&connect_timeout=30"

DB_HOST="localhost"
DB_PORT="5432"
DB_NAME="boutique_dev"
DB_USER="postgres"
DB_PASSWORD="devpassword"
DB_SSL_MODE="disable"
DB_CONNECT_TIMEOUT="30"
DB_STATEMENT_TIMEOUT="30000"
DB_QUERY_TIMEOUT="30000"
DB_CONNECTION_TIMEOUT_MS="30000"
DB_IDLE_TIMEOUT_MS="30000"

# Database Pool Configuration (Development - smaller pools)
DB_POOL_MAX="10"
DB_POOL_MIN="2"

# =============================================================================
# Authentication Secrets (Development)
# =============================================================================
# Generate these with: npm run generate:secrets
AUTH_SECRET="GENERATE_WITH_npm_run_generate:secrets"
NEXTAUTH_SECRET="GENERATE_WITH_npm_run_generate:secrets"
AUTH_URL="http://localhost:5173"
NEXTAUTH_URL="http://localhost:5173"

# =============================================================================
# Google OAuth Configuration (Development)
# =============================================================================
# Create a separate OAuth app in Google Cloud Console for development
# Authorized redirect URIs: http://localhost:5173/auth/callback/google
GOOGLE_CLIENT_ID="your-dev-google-client-id"
GOOGLE_CLIENT_SECRET="your-dev-google-client-secret"
GOOGLE_OAUTH_REDIRECT_URI="http://localhost:5173/auth/callback/google"
OAUTH_DEVELOPMENT_CALLBACK="http://localhost:5173/api/auth/oauth/google?action=callback"

# =============================================================================
# Cookie Configuration (Development - less strict)
# =============================================================================
COOKIE_DOMAIN="localhost"
COOKIE_SECURE="false"
COOKIE_SAME_SITE="lax"

# =============================================================================
# WebSocket Configuration (Development)
# =============================================================================
PUBLIC_CHATBOT_WEBSOCKET_HOST=localhost
PUBLIC_CHATBOT_WEBSOCKET_PORT=8743
CHATBOT_WEBSOCKET_PORT=8743
WS_AUTH_TOKEN="dev-websocket-token-not-secure"

# =============================================================================
# HikerAPI Configuration (Development - use test/mock mode)
# =============================================================================
HIKER_API_KEY="development-test-key-not-real"
HIKER_BASE_URL="https://hikerapi.com"
HIKER_TIMEOUT="30000"
HIKER_RATE_LIMIT_PER_SECOND="11"
HIKER_BURST_CAPACITY="20"
HIKER_RETRY_ATTEMPTS="3"
HIKER_RETRY_DELAY="5000"

# Cost Control Settings (Development - low limits)
HIKER_BUDGET_DAILY="1.00"
HIKER_COST_PER_UNIT="0.001"
HIKER_ALERT_THRESHOLD="0.8"
HIKER_EMERGENCY_STOP_THRESHOLD="0.95"

# Development/Testing Settings
HIKER_API_MOCK_MODE="true"
HIKER_API_TEST_USERNAME="therock"
HIKER_API_LOG_LEVEL="debug"

# =============================================================================
# External API Services (Development)
# =============================================================================
AVATAR_API_URL="https://api.dicebear.com/7.x/initials/svg"
AVATAR_FALLBACK_URL="https://api.dicebear.com/7.x/initials/svg?seed=user&size=80&backgroundColor=6b7280&textColor=ffffff"
DEFAULT_WEBHOOK_URL="http://localhost:5173/webhooks"

# =============================================================================
# Monitoring (Development - optional)
# =============================================================================
# Leave empty for development or use development instances
SENTRY_DSN=""
NEW_RELIC_LICENSE_KEY=""

# =============================================================================
# Security Settings (Development - relaxed for easier debugging)
# =============================================================================
RATE_LIMIT_ENABLED="true"
CSRF_PROTECTION="true"
HELMET_ENABLED="false"
FORCE_HTTPS="false"

# =============================================================================
# Performance and Timeout Settings (Development)
# =============================================================================
DEFAULT_TIMEOUT="30000"
HEALTH_CHECK_TIMEOUT="3000"
BULK_OPERATION_TIMEOUT="30000"
COMPLEX_OPERATION_TIMEOUT="30000"

# Cache Settings (Development - shorter TTL for faster iteration)
DEVICE_CAPACITY_CACHE_TTL="10000"
REQUEST_TRACKING_CLEANUP_INTERVAL="60000"
REQUEST_TRACKING_CUTOFF="60000"

# Performance Thresholds (Development)
SLOW_LOAD_THRESHOLD="3000"

# Error Recovery (Development)
ERROR_RECOVERY_DELAY="10000"
MAX_ERROR_RECOVERY_DELAY="60000"
RATE_LIMIT_RECOVERY_DELAY="60000"

# Scraping Configuration (Development - faster for testing)
SCRAPING_DELAY_BETWEEN_REQUESTS="1000"
SCRAPING_MAX_BACKOFF_DELAY="10000"

# WebSocket Settings
WS_MAX_RECONNECT_DELAY="10000"

# =============================================================================
# Prisma Configuration (Development)
# =============================================================================
PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING="1"
PRISMA_ENGINE_TYPE="wasm"

# =============================================================================
# Redis Configuration (Development - optional)
# =============================================================================
# For development, Redis is optional. If not configured, app will fall back to in-memory caching
REDIS_URL=""
REDIS_PASSWORD=""
REDIS_DB="1"

# =============================================================================
# Email Configuration (Development - use test service)
# =============================================================================
# For development, use a service like Mailtrap or disable email
SMTP_HOST="smtp.mailtrap.io"
SMTP_PORT="2525"
SMTP_SECURE="false"
SMTP_USER="your-mailtrap-username"
SMTP_PASS="your-mailtrap-password"
FROM_EMAIL="dev@localhost"

# =============================================================================
# Development Tools
# =============================================================================
# Enable additional debugging and development features
DEBUG_MODE="true"
VERBOSE_LOGGING="true"
HOT_RELOAD="true"
SOURCE_MAPS="true"

# =============================================================================
# Feature Flags (Development - enable all for testing)
# =============================================================================
FEATURE_ANALYTICS="false"
FEATURE_MONITORING="false"
FEATURE_BACKUP="false"
FEATURE_RATE_LIMITING="true"

# =============================================================================
# Development Setup Instructions
# =============================================================================
# 1. Copy this file to .env: cp .env.development.example .env
# 2. Generate secure secrets: npm run generate:secrets development
# 3. Update the database connection details for your local setup
# 4. Create development OAuth app in Google Cloud Console
# 5. Set up local PostgreSQL database:
#    createdb boutique_dev
#    npx prisma migrate dev
# 6. Start development server: npm run dev
#
# Optional Redis setup:
# - Install Redis locally for caching
# - Update REDIS_URL configuration if using Redis