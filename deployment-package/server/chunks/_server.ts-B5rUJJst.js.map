{"version":3,"file":"_server.ts-B5rUJJst.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/accounts/ownership/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { getAccountOwnershipSummary, getAccountsForUser, convertAccountToML, unassignAccountFromUser, assignAccountToUser } from \"../../../../../chunks/database.js\";\nconst GET = async ({ url }) => {\n  try {\n    const action = url.searchParams.get(\"action\");\n    switch (action) {\n      case \"summary\":\n        const summary = await getAccountOwnershipSummary();\n        return json({\n          success: true,\n          data: summary\n        });\n      case \"user-accounts\":\n        const userId = parseInt(url.searchParams.get(\"userId\") || \"0\");\n        const userRole = url.searchParams.get(\"userRole\") || \"UNAUTHORIZED\";\n        const limit = parseInt(url.searchParams.get(\"limit\") || \"20\");\n        const offset = parseInt(url.searchParams.get(\"offset\") || \"0\");\n        if (!userId || !userRole) {\n          return json({\n            success: false,\n            error: \"userId and userRole are required for user-accounts action\"\n          }, { status: 400 });\n        }\n        const userAccountsData = await getAccountsForUser(userId, userRole, limit, offset);\n        return json({\n          success: true,\n          data: userAccountsData\n        });\n      default:\n        const defaultSummary = await getAccountOwnershipSummary();\n        return json({\n          success: true,\n          data: defaultSummary\n        });\n    }\n  } catch (error) {\n    console.error(\"Failed to get account ownership data:\", error);\n    return json({\n      success: false,\n      error: \"Failed to retrieve account ownership data\"\n    }, { status: 500 });\n  }\n};\nconst POST = async ({ request }) => {\n  try {\n    const data = await request.json();\n    const { action, accountId, userId, visibility } = data;\n    if (!action || !accountId) {\n      return json({\n        success: false,\n        error: \"action and accountId are required\"\n      }, { status: 400 });\n    }\n    switch (action) {\n      case \"assign\":\n        if (!userId) {\n          return json({\n            success: false,\n            error: \"userId is required for assign action\"\n          }, { status: 400 });\n        }\n        const assignedAccount = await assignAccountToUser(\n          parseInt(accountId),\n          parseInt(userId),\n          visibility || \"PRIVATE\"\n        );\n        return json({\n          success: true,\n          data: assignedAccount,\n          message: `Account assigned to user ${userId}`\n        });\n      case \"unassign\":\n        const unassignedAccount = await unassignAccountFromUser(parseInt(accountId));\n        return json({\n          success: true,\n          data: unassignedAccount,\n          message: \"Account unassigned from user\"\n        });\n      case \"convert-to-ml\":\n        const mlAccount = await convertAccountToML(parseInt(accountId));\n        return json({\n          success: true,\n          data: mlAccount,\n          message: \"Account converted to ML trend finder\"\n        });\n      default:\n        return json({\n          success: false,\n          error: \"Invalid action. Supported actions: assign, unassign, convert-to-ml\"\n        }, { status: 400 });\n    }\n  } catch (error) {\n    console.error(\"Failed to manage account ownership:\", error);\n    return json({\n      success: false,\n      error: \"Failed to manage account ownership\"\n    }, { status: 500 });\n  }\n};\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}