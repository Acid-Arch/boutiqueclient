{"version":3,"file":"_server.ts-eFDDjH6P.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/scraping/sessions/_sessionId_/control/_server.ts.js"],"sourcesContent":["import { error, json } from \"@sveltejs/kit\";\nimport { query } from \"../../../../../../../chunks/db-loader.js\";\nconst POST = async ({ params, request, locals }) => {\n  try {\n    const sessionId = params.sessionId;\n    if (!sessionId) {\n      throw error(400, \"Session ID is required\");\n    }\n    const { action } = await request.json();\n    if (!action) {\n      throw error(400, \"Action is required\");\n    }\n    const validActions = [\"START\", \"PAUSE\", \"RESUME\", \"STOP\", \"RETRY\"];\n    if (!validActions.includes(action)) {\n      throw error(400, \"Invalid action\");\n    }\n    const currentSession = await getSessionById(sessionId);\n    if (!currentSession) {\n      throw error(404, \"Session not found\");\n    }\n    const canPerformAction = validateActionForStatus(currentSession.status, action);\n    if (!canPerformAction) {\n      throw error(400, `Cannot ${action} session in ${currentSession.status} status`);\n    }\n    const updatedSession = await performSessionAction(sessionId, action, currentSession);\n    return json({\n      success: true,\n      sessionId,\n      action,\n      previousStatus: currentSession.status,\n      newStatus: updatedSession.status,\n      message: `Session ${action.toLowerCase()}ed successfully`\n    });\n  } catch (err) {\n    console.error(\"Session control error:\", err);\n    if (err && typeof err === \"object\" && \"status\" in err) {\n      throw err;\n    }\n    return json(\n      { error: \"Failed to control session\" },\n      { status: 500 }\n    );\n  }\n};\nasync function getSessionById(sessionId) {\n  try {\n    const sessionQuery = `\n\t\t\tSELECT \n\t\t\t\tid, status, session_type, total_accounts,\n\t\t\t\tcompleted_accounts, failed_accounts\n\t\t\tFROM scraping_sessions\n\t\t\tWHERE id = $1\n\t\t`;\n    const result = await query(sessionQuery, [sessionId]);\n    if (result?.rows && result.rows.length > 0) {\n      return result.rows[0];\n    }\n    return null;\n  } catch (error2) {\n    console.error(\"Error fetching session:\", error2);\n    return null;\n  }\n}\nfunction validateActionForStatus(currentStatus, action) {\n  const validTransitions = {\n    \"PENDING\": [\"START\"],\n    \"IDLE\": [\"START\"],\n    \"INITIALIZING\": [\"STOP\"],\n    \"RUNNING\": [\"PAUSE\", \"STOP\"],\n    \"PAUSED\": [\"RESUME\", \"STOP\"],\n    \"COMPLETED\": [],\n    \"FAILED\": [\"RETRY\", \"START\"],\n    \"CANCELLED\": [\"RETRY\", \"START\"],\n    \"RATE_LIMITED\": [\"RETRY\", \"START\"]\n  };\n  return validTransitions[currentStatus]?.includes(action) || false;\n}\nasync function performSessionAction(sessionId, action, currentSession) {\n  const now = /* @__PURE__ */ new Date();\n  let newStatus;\n  let updateFields = {\n    updated_at: now\n  };\n  switch (action) {\n    case \"START\":\n      newStatus = \"INITIALIZING\";\n      updateFields.status = newStatus;\n      updateFields.start_time = now;\n      updateFields.progress = 0;\n      break;\n    case \"PAUSE\":\n      newStatus = \"PAUSED\";\n      updateFields.status = newStatus;\n      break;\n    case \"RESUME\":\n      newStatus = \"RUNNING\";\n      updateFields.status = newStatus;\n      break;\n    case \"STOP\":\n      newStatus = \"CANCELLED\";\n      updateFields.status = newStatus;\n      updateFields.end_time = now;\n      break;\n    case \"RETRY\":\n      newStatus = \"PENDING\";\n      updateFields.status = newStatus;\n      updateFields.start_time = null;\n      updateFields.end_time = null;\n      updateFields.error_count = 0;\n      updateFields.last_error = null;\n      updateFields.progress = 0;\n      break;\n    default:\n      throw new Error(`Unsupported action: ${action}`);\n  }\n  const setClause = Object.keys(updateFields).map((field, index) => `${field} = $${index + 2}`).join(\", \");\n  const updateQuery = `\n\t\tUPDATE scraping_sessions \n\t\tSET ${setClause}\n\t\tWHERE id = $1\n\t\tRETURNING status, updated_at\n\t`;\n  const queryParams = [sessionId, ...Object.values(updateFields)];\n  try {\n    const result = await query(updateQuery, queryParams);\n    if (result?.rows && result.rows.length > 0) {\n      await logSessionControl(sessionId, action, currentSession.status, newStatus);\n      return {\n        status: result.rows[0].status,\n        updatedAt: result.rows[0].updated_at\n      };\n    }\n    throw new Error(\"Failed to update session\");\n  } catch (error2) {\n    console.error(\"Error updating session:\", error2);\n    throw error2;\n  }\n}\nasync function logSessionControl(sessionId, action, fromStatus, toStatus) {\n  try {\n    const logQuery = `\n\t\t\tINSERT INTO scraping_logs (\n\t\t\t\tid, session_id, timestamp, level, message, source, details, created_at\n\t\t\t) VALUES (\n\t\t\t\tgen_random_uuid(), $1, $2, $3, $4, $5, $6, $2\n\t\t\t)\n\t\t`;\n    const message = `Session control: ${action} (${fromStatus} â†’ ${toStatus})`;\n    const details = JSON.stringify({\n      action,\n      fromStatus,\n      toStatus,\n      timestamp: (/* @__PURE__ */ new Date()).toISOString()\n    });\n    await query(logQuery, [\n      sessionId,\n      /* @__PURE__ */ new Date(),\n      \"INFO\",\n      message,\n      \"SESSION_MANAGER\",\n      details\n    ]);\n  } catch (error2) {\n    console.error(\"Error logging session control:\", error2);\n  }\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}