{"version":3,"file":"hiker-api-client-BwPCqXIk.js","sources":["../../../.svelte-kit/adapter-node/chunks/hiker-api-client.js"],"sourcesContent":["class HikerAPIClient {\n  config;\n  rateLimitInfo;\n  lastRequestTime = 0;\n  requestCount = { second: 0, hour: 0, day: 0 };\n  resetTimes = { second: 0, hour: 0, day: 0 };\n  constructor(config) {\n    this.config = {\n      apiKey: process.env.HIKER_API_KEY || \"\",\n      baseUrl: process.env.HIKER_BASE_URL || \"https://hikerapi.com\",\n      timeout: parseInt(process.env.HIKER_TIMEOUT || \"30000\"),\n      rateLimit: parseInt(process.env.HIKER_RATE_LIMIT_PER_SECOND || \"11\"),\n      retryAttempts: parseInt(process.env.HIKER_RETRY_ATTEMPTS || \"3\"),\n      retryDelay: parseInt(process.env.HIKER_RETRY_DELAY || \"5000\"),\n      budgetLimit: parseFloat(process.env.HIKER_BUDGET_DAILY || \"10.00\"),\n      costPerUnit: parseFloat(process.env.HIKER_COST_PER_UNIT || \"0.001\"),\n      alertThreshold: parseFloat(process.env.HIKER_ALERT_THRESHOLD || \"0.8\"),\n      mockMode: process.env.HIKER_API_MOCK_MODE === \"true\",\n      ...config\n    };\n    this.rateLimitInfo = {\n      requestsPerSecond: this.config.rateLimit,\n      currentSecondUsage: 0,\n      currentHourUsage: 0,\n      currentDayUsage: 0,\n      resetTimes: {\n        nextSecond: /* @__PURE__ */ new Date(),\n        nextHour: /* @__PURE__ */ new Date(),\n        nextDay: /* @__PURE__ */ new Date()\n      },\n      isLimited: false\n    };\n    this.initializeRateLimitTracking();\n  }\n  // ===== PUBLIC API METHODS =====\n  /**\n   * Get user profile data with enhanced information (2 request units)\n   * Uses /a2/user endpoint for comprehensive profile data\n   */\n  async getUserProfile(username, options) {\n    const startTime = Date.now();\n    try {\n      if (this.config.mockMode) {\n        return this.getMockUserProfile(username, startTime);\n      }\n      const response = await this.makeRequest(\"/a2/user\", {\n        username,\n        force: options?.force ? \"on\" : void 0\n      });\n      return {\n        success: true,\n        data: response.data,\n        requestUnits: 2,\n        duration: Date.now() - startTime,\n        metrics: {\n          accountsProcessed: 1,\n          accountsSuccessful: 1,\n          accountsFailed: 0,\n          accountsSkipped: 0,\n          totalRequestUnits: 2,\n          totalCost: this.calculateCost(2),\n          averageProcessingTime: Date.now() - startTime,\n          successRate: 100,\n          errorRate: 0,\n          rateLimitHits: 0,\n          retryCount: 0\n        }\n      };\n    } catch (error) {\n      const scrapingError = this.handleError(error);\n      return {\n        success: false,\n        error: scrapingError,\n        requestUnits: 0,\n        duration: Date.now() - startTime,\n        metrics: {\n          accountsProcessed: 1,\n          accountsSuccessful: 0,\n          accountsFailed: 1,\n          accountsSkipped: 0,\n          totalRequestUnits: 0,\n          totalCost: 0,\n          averageProcessingTime: Date.now() - startTime,\n          successRate: 0,\n          errorRate: 100,\n          rateLimitHits: scrapingError.type === \"RATE_LIMIT_EXCEEDED\" ? 1 : 0,\n          retryCount: 0\n        }\n      };\n    }\n  }\n  /**\n   * Get basic user information (1 request unit)\n   * Uses /v1/user/by/username endpoint for basic profile data\n   */\n  async getBasicProfile(username) {\n    const startTime = Date.now();\n    try {\n      if (this.config.mockMode) {\n        return this.getMockBasicProfile(username, startTime);\n      }\n      const response = await this.makeRequest(\"/v1/user/by/username\", { username });\n      return {\n        success: true,\n        data: response.data,\n        requestUnits: 1,\n        duration: Date.now() - startTime,\n        metrics: {\n          accountsProcessed: 1,\n          accountsSuccessful: 1,\n          accountsFailed: 0,\n          accountsSkipped: 0,\n          totalRequestUnits: 1,\n          totalCost: this.calculateCost(1),\n          averageProcessingTime: Date.now() - startTime,\n          successRate: 100,\n          errorRate: 0,\n          rateLimitHits: 0,\n          retryCount: 0\n        }\n      };\n    } catch (error) {\n      const scrapingError = this.handleError(error);\n      return {\n        success: false,\n        error: scrapingError,\n        requestUnits: 0,\n        duration: Date.now() - startTime,\n        metrics: {\n          accountsProcessed: 1,\n          accountsSuccessful: 0,\n          accountsFailed: 1,\n          accountsSkipped: 0,\n          totalRequestUnits: 0,\n          totalCost: 0,\n          averageProcessingTime: Date.now() - startTime,\n          successRate: 0,\n          errorRate: 100,\n          rateLimitHits: scrapingError.type === \"RATE_LIMIT_EXCEEDED\" ? 1 : 0,\n          retryCount: 0\n        }\n      };\n    }\n  }\n  /**\n   * Get account balance and usage information\n   * Uses /sys/balance endpoint (typically free)\n   */\n  async getBalance() {\n    const startTime = Date.now();\n    try {\n      if (this.config.mockMode) {\n        return this.getMockBalance(startTime);\n      }\n      const response = await this.makeRequest(\"/sys/balance\");\n      return {\n        success: true,\n        data: response.data,\n        requestUnits: 0,\n        duration: Date.now() - startTime,\n        metrics: {\n          accountsProcessed: 0,\n          accountsSuccessful: 0,\n          accountsFailed: 0,\n          accountsSkipped: 0,\n          totalRequestUnits: 0,\n          totalCost: 0,\n          averageProcessingTime: Date.now() - startTime,\n          successRate: 100,\n          errorRate: 0,\n          rateLimitHits: 0,\n          retryCount: 0\n        }\n      };\n    } catch (error) {\n      const scrapingError = this.handleError(error);\n      return {\n        success: false,\n        error: scrapingError,\n        requestUnits: 0,\n        duration: Date.now() - startTime,\n        metrics: {\n          accountsProcessed: 0,\n          accountsSuccessful: 0,\n          accountsFailed: 0,\n          accountsSkipped: 1,\n          totalRequestUnits: 0,\n          totalCost: 0,\n          averageProcessingTime: Date.now() - startTime,\n          successRate: 0,\n          errorRate: 100,\n          rateLimitHits: 0,\n          retryCount: 0\n        }\n      };\n    }\n  }\n  // ===== PRIVATE HELPER METHODS =====\n  async makeRequest(endpoint, params, retryCount = 0) {\n    await this.enforceRateLimit();\n    const url = new URL(endpoint, this.config.baseUrl);\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== void 0 && value !== null) {\n          url.searchParams.append(key, String(value));\n        }\n      });\n    }\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"x-access-key\": this.config.apiKey,\n        \"accept\": \"application/json\",\n        \"user-agent\": \"BoutiquePortal-Scraper/1.0\"\n      },\n      signal: AbortSignal.timeout(this.config.timeout)\n    };\n    try {\n      this.updateRateLimitCounters();\n      const response = await fetch(url.toString(), requestOptions);\n      const data = await response.json();\n      if (response.status === 429) {\n        const retryAfter = parseInt(response.headers.get(\"retry-after\") || \"60\");\n        this.rateLimitInfo.isLimited = true;\n        this.rateLimitInfo.retryAfter = retryAfter;\n        throw new Error(`Rate limit exceeded. Retry after ${retryAfter} seconds`);\n      }\n      if (response.status === 402) {\n        throw new Error(\"Insufficient balance\");\n      }\n      if (response.status === 404) {\n        throw new Error(\"Account not found or private\");\n      }\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${data?.message || \"Unknown error\"}`);\n      }\n      const requestUnits = data.request_units || this.estimateRequestUnits(endpoint);\n      return {\n        success: true,\n        data: data.response || data,\n        requestUnits,\n        requestId: data.request_id || `req_${Date.now()}`,\n        timestamp: (/* @__PURE__ */ new Date()).toISOString()\n      };\n    } catch (error) {\n      if (retryCount < this.config.retryAttempts && this.isRetryableError(error)) {\n        const delay = this.calculateRetryDelay(retryCount);\n        await this.sleep(delay);\n        return this.makeRequest(endpoint, params, retryCount + 1);\n      }\n      throw error;\n    }\n  }\n  async enforceRateLimit() {\n    const now = Date.now();\n    const timeSinceLastRequest = now - this.lastRequestTime;\n    const minInterval = 1e3 / this.config.rateLimit;\n    if (timeSinceLastRequest < minInterval) {\n      const waitTime = minInterval - timeSinceLastRequest;\n      await this.sleep(waitTime);\n    }\n    this.lastRequestTime = Date.now();\n  }\n  updateRateLimitCounters() {\n    const now = Date.now();\n    if (now - this.resetTimes.second >= 1e3) {\n      this.requestCount.second = 0;\n      this.resetTimes.second = now;\n      this.rateLimitInfo.resetTimes.nextSecond = new Date(now + 1e3);\n    }\n    if (now - this.resetTimes.hour >= 36e5) {\n      this.requestCount.hour = 0;\n      this.resetTimes.hour = now;\n      this.rateLimitInfo.resetTimes.nextHour = new Date(now + 36e5);\n    }\n    if (now - this.resetTimes.day >= 864e5) {\n      this.requestCount.day = 0;\n      this.resetTimes.day = now;\n      this.rateLimitInfo.resetTimes.nextDay = new Date(now + 864e5);\n    }\n    this.requestCount.second++;\n    this.requestCount.hour++;\n    this.requestCount.day++;\n    this.rateLimitInfo.currentSecondUsage = this.requestCount.second;\n    this.rateLimitInfo.currentHourUsage = this.requestCount.hour;\n    this.rateLimitInfo.currentDayUsage = this.requestCount.day;\n  }\n  initializeRateLimitTracking() {\n    const now = Date.now();\n    this.resetTimes = {\n      second: now,\n      hour: now,\n      day: now\n    };\n    this.rateLimitInfo.resetTimes = {\n      nextSecond: new Date(now + 1e3),\n      nextHour: new Date(now + 36e5),\n      nextDay: new Date(now + 864e5)\n    };\n  }\n  handleError(error) {\n    if (error.message?.includes(\"Rate limit exceeded\")) {\n      return {\n        type: \"RATE_LIMIT_EXCEEDED\",\n        message: \"HikerAPI rate limit exceeded\",\n        isRetryable: true,\n        retryAfter: this.rateLimitInfo.retryAfter || 60,\n        details: { rateLimitInfo: this.rateLimitInfo }\n      };\n    }\n    if (error.message?.includes(\"Insufficient balance\")) {\n      return {\n        type: \"INSUFFICIENT_BALANCE\",\n        message: \"Insufficient HikerAPI balance\",\n        isRetryable: false,\n        details: { needsTopUp: true }\n      };\n    }\n    if (error.message?.includes(\"not found\") || error.message?.includes(\"private\")) {\n      return {\n        type: \"ACCOUNT_NOT_FOUND\",\n        message: \"Instagram account not found or private\",\n        isRetryable: false\n      };\n    }\n    if (error.name === \"TimeoutError\" || error.message?.includes(\"timeout\")) {\n      return {\n        type: \"TIMEOUT_ERROR\",\n        message: \"Request timeout\",\n        isRetryable: true,\n        retryAfter: 5\n      };\n    }\n    return {\n      type: \"UNKNOWN_ERROR\",\n      message: error.message || \"Unknown error occurred\",\n      isRetryable: false,\n      originalError: error\n    };\n  }\n  isRetryableError(error) {\n    const retryableTypes = [\"RATE_LIMIT_EXCEEDED\", \"TIMEOUT_ERROR\", \"NETWORK_ERROR\"];\n    const scrapingError = this.handleError(error);\n    return retryableTypes.includes(scrapingError.type);\n  }\n  calculateRetryDelay(retryCount) {\n    return Math.min(1e3 * Math.pow(2, retryCount), 3e4);\n  }\n  estimateRequestUnits(endpoint) {\n    const unitMap = {\n      \"/a2/user\": 2,\n      \"/v1/user/by/id\": 1,\n      \"/v1/user/by/username\": 1,\n      \"/v2/user/followers\": 2,\n      \"/v2/user/following\": 2,\n      \"/v2/user/medias\": 1,\n      \"/sys/balance\": 0\n    };\n    return unitMap[endpoint] || 1;\n  }\n  calculateCost(requestUnits) {\n    return requestUnits * this.config.costPerUnit;\n  }\n  sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n  // ===== MOCK DATA METHODS =====\n  getMockUserProfile(username, startTime) {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const mockProfile = {\n          user_id: `mock_${username}`,\n          username,\n          full_name: `Mock User ${username}`,\n          biography: `This is a mock profile for ${username}`,\n          profile_pic_url: \"https://example.com/profile.jpg\",\n          profile_pic_url_hd: \"https://example.com/profile_hd.jpg\",\n          external_url: \"https://example.com\",\n          is_verified: Math.random() > 0.8,\n          is_private: Math.random() > 0.7,\n          is_business_account: Math.random() > 0.6,\n          is_professional_account: Math.random() > 0.5,\n          follower_count: Math.floor(Math.random() * 1e5) + 1e3,\n          following_count: Math.floor(Math.random() * 2e3) + 100,\n          media_count: Math.floor(Math.random() * 500) + 50,\n          category: \"Mock Category\",\n          business_category: \"Technology\",\n          highlight_reel_count: Math.floor(Math.random() * 10)\n        };\n        resolve({\n          success: true,\n          data: mockProfile,\n          requestUnits: 2,\n          duration: Date.now() - startTime,\n          metrics: {\n            accountsProcessed: 1,\n            accountsSuccessful: 1,\n            accountsFailed: 0,\n            accountsSkipped: 0,\n            totalRequestUnits: 2,\n            totalCost: this.calculateCost(2),\n            averageProcessingTime: Date.now() - startTime,\n            successRate: 100,\n            errorRate: 0,\n            rateLimitHits: 0,\n            retryCount: 0\n          }\n        });\n      }, 500 + Math.random() * 1e3);\n    });\n  }\n  getMockBasicProfile(username, startTime) {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const mockUser = {\n          user_id: `mock_${username}`,\n          username,\n          full_name: `Mock User ${username}`,\n          biography: `Mock biography for ${username}`,\n          profile_pic_url: \"https://example.com/profile.jpg\",\n          is_verified: Math.random() > 0.8,\n          is_private: Math.random() > 0.7,\n          is_business_account: Math.random() > 0.6,\n          follower_count: Math.floor(Math.random() * 1e5) + 1e3,\n          following_count: Math.floor(Math.random() * 2e3) + 100,\n          media_count: Math.floor(Math.random() * 500) + 50\n        };\n        resolve({\n          success: true,\n          data: mockUser,\n          requestUnits: 1,\n          duration: Date.now() - startTime,\n          metrics: {\n            accountsProcessed: 1,\n            accountsSuccessful: 1,\n            accountsFailed: 0,\n            accountsSkipped: 0,\n            totalRequestUnits: 1,\n            totalCost: this.calculateCost(1),\n            averageProcessingTime: Date.now() - startTime,\n            successRate: 100,\n            errorRate: 0,\n            rateLimitHits: 0,\n            retryCount: 0\n          }\n        });\n      }, 300 + Math.random() * 500);\n    });\n  }\n  getMockBalance(startTime) {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const mockBalance = {\n          balance: 95.5,\n          credits_remaining: 9550,\n          daily_usage: 45,\n          monthly_usage: 1250,\n          plan_type: \"Developer\",\n          reset_date: new Date(Date.now() + 864e5).toISOString()\n        };\n        resolve({\n          success: true,\n          data: mockBalance,\n          requestUnits: 0,\n          duration: Date.now() - startTime,\n          metrics: {\n            accountsProcessed: 0,\n            accountsSuccessful: 0,\n            accountsFailed: 0,\n            accountsSkipped: 0,\n            totalRequestUnits: 0,\n            totalCost: 0,\n            averageProcessingTime: Date.now() - startTime,\n            successRate: 100,\n            errorRate: 0,\n            rateLimitHits: 0,\n            retryCount: 0\n          }\n        });\n      }, 200);\n    });\n  }\n  // ===== PUBLIC UTILITY METHODS =====\n  getRateLimitInfo() {\n    return { ...this.rateLimitInfo };\n  }\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n  async testConnection() {\n    try {\n      const result = await this.getBalance();\n      return result.success;\n    } catch {\n      return false;\n    }\n  }\n}\nexport {\n  HikerAPIClient as H\n};\n"],"names":[],"mappings":"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"}